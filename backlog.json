[
  {
    "id": "001",
    "project": "Sales Genie",
    "epic": "Foundation",
    "priority": "CRITICAL",
    "status": "DONE",
    "user_story": "As a developer, I need a working SQLite database so that agents can persist prospect data",
    "acceptance_criteria": [
      "Database created",
      "Schema with prospects, campaigns, messages tables",
      "Database connection working from both Python and Node.js",
      "Sample data inserted successfully"
    ],
    "effort": 2,
    "business_value": 10,
    "dependencies": [],
    "technical_notes": "Using better-sqlite3 for Node.js and aiosqlite for Python initially\nSwitrched to PostreSQL in Docker container\n",
    "owner": null,
    "is_next": false,
    "display_order": 30,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "002",
    "project": "Sales Genie",
    "epic": "Foundation",
    "priority": "CRITICAL",
    "status": "DONE",
    "user_story": "As a developer, I need Python 3.13.7 environment with LangChain so that I can build AI agents",
    "acceptance_criteria": [
      "Python 3.13.7 installed",
      "LangChain, FastAPI, aiosqlite dependencies installed",
      "Virtual environment configured",
      "Test script runs successfully"
    ],
    "effort": 1,
    "business_value": 10,
    "dependencies": [],
    "technical_notes": "Avoid Python 3.14 beta - causes package compilation issues",
    "owner": null,
    "is_next": false,
    "display_order": 31,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "003",
    "project": "Sales Genie",
    "epic": "Foundation",
    "priority": "CRITICAL",
    "status": "DONE",
    "user_story": "As a system, I need Lead Discovery Agent running on port 8001 so that I can discover prospects",
    "acceptance_criteria": [
      "FastAPI server starts on port 8001",
      "/health endpoint responds",
      "Database connection established",
      "LinkedIn CSV import endpoint functional"
    ],
    "effort": 3,
    "business_value": 10,
    "dependencies": [
      "001",
      "002"
    ],
    "technical_notes": "FastAPI + async/await patterns for high concurrency",
    "owner": null,
    "is_next": false,
    "display_order": 32,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "004",
    "project": "Sales Genie",
    "epic": "Foundation",
    "priority": "CRITICAL",
    "status": "DONE",
    "user_story": "As a system, I need Outreach Agent running on port 8002 so that I can send emails",
    "acceptance_criteria": [
      "FastAPI server starts on port 8002",
      "/health endpoint responds",
      "Database connection established",
      "Email template engine functional"
    ],
    "effort": 3,
    "business_value": 10,
    "dependencies": [
      "001",
      "002"
    ],
    "technical_notes": "Jinja2 templates for email personalization",
    "owner": null,
    "is_next": false,
    "display_order": 33,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "005",
    "project": "Sales Genie",
    "epic": "integration",
    "priority": "CRITICAL",
    "status": "DONE",
    "user_story": "As Lead Discovery Agent, I need Companies House API key so that I can discover UK prospects",
    "acceptance_criteria": [
      "API key obtained from Companies House",
      "API integration tested",
      "Can search for companies by industry",
      "Can fetch company details and officers"
    ],
    "effort": 2,
    "business_value": 9,
    "dependencies": [
      "003"
    ],
    "technical_notes": "Free API with rate limits - implement caching",
    "owner": null,
    "is_next": false,
    "display_order": 34,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "006",
    "project": "Sales Genie",
    "epic": "integration",
    "priority": "CRITICAL",
    "status": "DONE",
    "user_story": "As Outreach Agent, I need SMTP credentials so that I can send emails to prospects",
    "acceptance_criteria": [
      "SMTP server configured (Gmail/SendGrid)",
      "Can send test emails",
      "Email authentication (SPF/DKIM) configured",
      "Delivery tracking enabled"
    ],
    "effort": 2,
    "business_value": 9,
    "dependencies": [
      "004"
    ],
    "technical_notes": "Gmail app passwords or SendGrid API - ensure deliverability",
    "owner": null,
    "is_next": false,
    "display_order": 35,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "007",
    "project": "Sales Genie",
    "epic": "infrastructure",
    "priority": "MEDIUM",
    "status": "DONE",
    "user_story": "As a DevOps engineer, I need Docker Compose configuration so that I can deploy the full stack easily",
    "acceptance_criteria": [
      "docker-compose.yml defines all 7 services",
      "Ollama (11434), PostgreSQL (5432), Redis (6379) configured",
      "API (3001), Agents (8001/8002), Dashboard (3002) configured",
      "Volumes for data persistence",
      "Health checks for all services",
      "Single command deployment works"
    ],
    "effort": 5,
    "business_value": 7,
    "dependencies": [],
    "technical_notes": "? COMPLETE (100%): docker-compose.yml fully configured with all 7 services. All acceptance criteria met: (1) Dashboard port fixed to 3002:3000 (L159), (2) Agent ports exposed: lead-discovery 8001 (L96-97), outreach 8002 (L126-127), (3) CORS updated with port 3002 in docker-compose.yml (L72) and api/server.js (L65), (4) Dashboard healthcheck fixed to root endpoint (L177). All services have health checks and volume persistence. Files: docker-compose.yml (L1-195), api/server.js (L64-68).",
    "owner": null,
    "is_next": false,
    "display_order": 36,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "008",
    "project": "Sales Genie",
    "epic": "infrastructure",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a developer, I need environment variable management so that configuration is secure and flexible",
    "acceptance_criteria": [
      ".env.example template created",
      "All API keys documented",
      "Database URLs configurable",
      "Port configurations flexible",
      "Secrets not committed to git"
    ],
    "effort": 2,
    "business_value": 8,
    "dependencies": [],
    "technical_notes": "Support both SQLite (dev) and PostgreSQL (prod) via env vars",
    "owner": null,
    "is_next": false,
    "display_order": 37,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "009",
    "project": "Sales Genie",
    "epic": "infrastructure",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a system administrator, I need logging and monitoring so that I can troubleshoot issues",
    "acceptance_criteria": [
      "Winston logging configured in Node.js",
      "Python logging with structured output",
      "Log levels configurable (DEBUG, INFO, WARN, ERROR)",
      "Logs persisted to files",
      "Error tracking with stack traces"
    ],
    "effort": 3,
    "business_value": 6,
    "dependencies": [],
    "technical_notes": "Winston for Node, structlog for Python, consider ELK stack for production",
    "owner": null,
    "is_next": false,
    "display_order": 38,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "010",
    "project": "Sales Genie",
    "epic": "infrastructure",
    "priority": "LOW",
    "status": "NOT_STARTED",
    "user_story": "As a team, I need CI/CD pipeline so that deployments are automated and reliable",
    "acceptance_criteria": [
      "GitHub Actions workflow configured",
      "Automated tests run on PR",
      "Docker images built and pushed",
      "Deployment to staging automated",
      "Production deployment requires approval"
    ],
    "effort": 8,
    "business_value": 5,
    "dependencies": [
      "007",
      "013"
    ],
    "technical_notes": "GitHub Actions + Azure Container Registry + Azure Container Apps",
    "owner": null,
    "is_next": false,
    "display_order": 39,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "011",
    "project": "Sales Genie",
    "epic": "infrastructure",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a system, I need health check endpoints so that monitoring can detect failures",
    "acceptance_criteria": [
      "/health endpoints on all services",
      "/health/ready for readiness checks",
      "/health/live for liveness checks",
      "Database connectivity checked",
      "Dependency health included"
    ],
    "effort": 3,
    "business_value": 7,
    "dependencies": [
      "003",
      "004"
    ],
    "technical_notes": "Already partially implemented - standardize across all services",
    "owner": null,
    "is_next": false,
    "display_order": 40,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "012",
    "project": "Sales Genie",
    "epic": "infrastructure",
    "priority": "LOW",
    "status": "NOT_STARTED",
    "user_story": "As a DevOps engineer, I need database backup strategy so that data is never lost",
    "acceptance_criteria": [
      "Automated daily backups",
      "Backup retention policy (30 days)",
      "Backup restoration tested",
      "Point-in-time recovery capability",
      "Backup monitoring and alerts"
    ],
    "effort": 5,
    "business_value": 6,
    "dependencies": [
      "001"
    ],
    "technical_notes": "SQLite: .backup command, PostgreSQL: pg_dump, Azure Backup for production",
    "owner": null,
    "is_next": false,
    "display_order": 41,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "013",
    "project": "Sales Genie",
    "epic": "infrastructure",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a developer, I need automated testing infrastructure so that code quality is maintained",
    "acceptance_criteria": [
      "Jest configured for Node.js",
      "Pytest configured for Python",
      "Playwright for E2E tests",
      "Test coverage reporting",
      "Tests run in CI pipeline"
    ],
    "effort": 5,
    "business_value": 7,
    "dependencies": [],
    "technical_notes": "Test files already exist in tests/ directory - need full integration",
    "owner": null,
    "is_next": false,
    "display_order": 42,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "014",
    "project": "Sales Genie",
    "epic": "infrastructure",
    "priority": "LOW",
    "status": "NOT_STARTED",
    "user_story": "As a product owner, I need staging environment so that features can be tested before production",
    "acceptance_criteria": [
      "Staging environment deployed",
      "Separate database from production",
      "Same configuration as production",
      "Accessible to team for testing",
      "Data seeding scripts available"
    ],
    "effort": 8,
    "business_value": 5,
    "dependencies": [
      "007",
      "010"
    ],
    "technical_notes": "Azure Container Apps with staging slot, or separate resource group",
    "owner": null,
    "is_next": false,
    "display_order": 43,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "015",
    "project": "Sales Genie",
    "epic": "agents",
    "priority": "CRITICAL",
    "status": "TESTING",
    "user_story": "As a user, I need LinkedHelper CSV import and other flexible data import so that I can bulk import prospects from multiple sources",
    "acceptance_criteria": [
      "Upload CSV endpoint functional",
      "Parse LinkedIn Sales Navigator export format",
      "Parse LinkedHelper export format",
      "Map Linked Helper fields to Sales Genie schema",
      "Deduplicate prospects across imports (by email, LinkedIn URL)",
      "Tag prospects with import source (Sales Navigator or LinkedHelper, or other source name captured when data is imported)",
      "Validate and clean prospect data",
      "Store in database with qualification scores",
      "Support imports up to 2,500 records",
      "Display import summary (new, duplicates, errors)",
      "Implement a drag-and-drop field mapping capability to map source format to the Sales Genie format. ",
      "Import message history from Linked Helper",
      "Import connection status (1st degree, 2nd degree, etc.)"
    ],
    "effort": 5,
    "business_value": 9,
    "dependencies": [
      "003"
    ],
    "technical_notes": "ToS-compliant approach - manual exports only. Support both Sales Navigator and Linked Helper CSV formats. Use LinkedIn URL as unique identifier for deduplication. Store import metadata (source, date, batch ID).",
    "owner": null,
    "is_next": true,
    "display_order": 44,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "016",
    "project": "Sales Genie",
    "epic": "agents",
    "priority": "CRITICAL",
    "status": "NOT_STARTED",
    "user_story": "As Outreach Agent, I need AI email personalization so that emails feel human-written",
    "acceptance_criteria": [
      "LangChain integration for email generation",
      "Prospect data used for personalization",
      "Multiple template variations",
      ">80% human-like quality score"
    ],
    "effort": 8,
    "business_value": 9,
    "dependencies": [
      "004",
      "006"
    ],
    "technical_notes": "Use Ollama Mistral or OpenAI GPT-4",
    "owner": null,
    "is_next": true,
    "display_order": 55,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "017",
    "project": "Sales Genie",
    "epic": "integration",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As Lead Discovery Agent, I need tool integration so that I can find prospect emails",
    "acceptance_criteria": [
      "Tool selected from Apollo.io Hunter.io and other top candidate tools",
      "Can enrich company and key contact data with accurate email",
      "Can find contact emails",
      "Handles rate limits gracefully",
      "API integrated"
    ],
    "effort": 5,
    "business_value": 8,
    "dependencies": [
      "003",
      "015"
    ],
    "technical_notes": "",
    "owner": null,
    "is_next": true,
    "display_order": 50,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "018",
    "project": "Sales Genie",
    "epic": "agents",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a system, I need Fanatical Hunter Agent so that Lead Discovery never stops finding prospects",
    "acceptance_criteria": [
      "Extends Lead Discovery Agent with relentless mode",
      "Continuous trigger event monitoring",
      "Quality + quantity balanced approach",
      "Competitive account intelligence",
      "Never-stop hunting protocol"
    ],
    "effort": 8,
    "business_value": 9,
    "dependencies": [
      "015",
      "027"
    ],
    "technical_notes": "Enhanced Lead Discovery Agent with fanatical prospecting capabilities",
    "owner": null,
    "is_next": false,
    "display_order": 65,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "019",
    "project": "Sales Genie",
    "epic": "agents",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a system, I need Multi-Channel Assault Agent so that outreach uses optimal channel sequences",
    "acceptance_criteria": [
      "Extends Outreach Agent with multi-channel orchestration",
      "Email, LinkedIn, phone coordination",
      "Systematic interruption engine",
      "Message personalization at scale",
      "Objection anticipation in initial outreach"
    ],
    "effort": 13,
    "business_value": 9,
    "dependencies": [
      "016",
      "027"
    ],
    "technical_notes": "Enhanced Outreach Agent with multi-channel fanatical capabilities",
    "owner": null,
    "is_next": false,
    "display_order": 66,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "020",
    "project": "Sales Genie",
    "epic": "agents",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a social selling system, I need Social Dominance Agent so that I can execute LinkedIn 5 Cs at scale",
    "acceptance_criteria": [
      "Connection automation with personalized requests",
      "Content curation engine",
      "Engagement amplification (likes, shares, comments)",
      "Trigger event detection from social signals",
      "Relationship warming through consistent interactions"
    ],
    "effort": 13,
    "business_value": 8,
    "dependencies": [
      "027",
      "015"
    ],
    "technical_notes": "Five Cs: Connecting, Content Creation, Content Curation, Conversations, Converting",
    "owner": null,
    "is_next": false,
    "display_order": 67,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "021",
    "project": "Sales Genie",
    "epic": "architecture",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a team, I need centralized architecture documentation so that all design decisions are traceable",
    "acceptance_criteria": [
      "Create /architecture folder with standard structure",
      "System architecture diagrams (C4 model)",
      "Agent interaction flows documented",
      "Database schema documentation",
      "API contract specifications",
      "Technology stack rationale"
    ],
    "effort": 5,
    "business_value": 7,
    "dependencies": [],
    "technical_notes": "Use Mermaid diagrams for version control, store in /architecture folder",
    "owner": null,
    "is_next": false,
    "display_order": 68,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "022",
    "project": "Sales Genie",
    "epic": "architecture",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a developer, I need Architecture Decision Records (ADRs) so that I understand why choices were made",
    "acceptance_criteria": [
      "ADR template created",
      "Key decisions documented (SQLite vs PostgreSQL, LangChain framework, etc)",
      "Consequences and trade-offs captured",
      "Alternative approaches considered",
      "Numbered and dated ADR files in /architecture/decisions"
    ],
    "effort": 3,
    "business_value": 6,
    "dependencies": [
      "021"
    ],
    "technical_notes": "Follow Michael Nygard ADR template format",
    "owner": null,
    "is_next": false,
    "display_order": 69,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "023",
    "project": "Sales Genie",
    "epic": "architecture",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a team, I need regular architecture reviews so that design stays aligned with requirements",
    "acceptance_criteria": [
      "Bi-weekly architecture review meetings",
      "Review checklist created",
      "Design patterns consistency checked",
      "Technical debt identified and tracked",
      "Review minutes documented"
    ],
    "effort": 2,
    "business_value": 6,
    "dependencies": [
      "021",
      "022"
    ],
    "technical_notes": "Lightweight process - focus on major decisions and technical debt",
    "owner": null,
    "is_next": false,
    "display_order": 70,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "024",
    "project": "Sales Genie",
    "epic": "architecture",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a team, I need API design standards so that all endpoints are consistent",
    "acceptance_criteria": [
      "REST API conventions documented",
      "Error response format standardized",
      "Authentication patterns defined",
      "Versioning strategy established",
      "OpenAPI specification template"
    ],
    "effort": 3,
    "business_value": 7,
    "dependencies": [
      "021"
    ],
    "technical_notes": "Follow REST best practices, use OpenAPI 3.0 for documentation",
    "owner": null,
    "is_next": false,
    "display_order": 71,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "025",
    "project": "Sales Genie",
    "epic": "architecture",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a developer, I need agent design patterns so that all agents follow consistent architecture",
    "acceptance_criteria": [
      "Base agent class/interface defined",
      "LangChain integration patterns documented",
      "State management approach specified",
      "Error handling patterns established",
      "Testing strategy for agents defined"
    ],
    "effort": 5,
    "business_value": 6,
    "dependencies": [
      "021",
      "027"
    ],
    "technical_notes": "Define reusable patterns for agent development with LangChain/LangGraph",
    "owner": null,
    "is_next": false,
    "display_order": 72,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "026",
    "project": "Sales Genie",
    "epic": "architecture",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a team, I need technical roadmap so that we align on priorities and sequencing",
    "acceptance_criteria": [
      "Quarterly roadmap with major milestones",
      "Dependencies between components mapped",
      "Resource allocation considered",
      "Risk mitigation strategies identified",
      "Roadmap reviewed and updated monthly"
    ],
    "effort": 3,
    "business_value": 7,
    "dependencies": [
      "021",
      "023"
    ],
    "technical_notes": "Visual roadmap in Mermaid or similar, linked to backlog",
    "owner": null,
    "is_next": false,
    "display_order": 73,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "027",
    "project": "Sales Genie",
    "epic": "fanatical",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a system, I need Fanatical Orchestrator Agent so that I can coordinate all agents 24/7",
    "acceptance_criteria": [
      "LangGraph workflow orchestration",
      "Multi-agent coordination",
      "\"One More Call\" protocol implemented",
      "24/7 operational capability"
    ],
    "effort": 13,
    "business_value": 10,
    "dependencies": [
      "003",
      "004",
      "016"
    ],
    "technical_notes": "Core of fanatical prospecting methodology - runs on port 8000",
    "owner": null,
    "is_next": false,
    "display_order": 74,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "028",
    "project": "Sales Genie",
    "epic": "fanatical",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a system, I need Golden Hours Optimization Agent so that I can maximize response rates",
    "acceptance_criteria": [
      "Analyze prospect response patterns by time",
      "Identify optimal contact windows",
      "Prioritize activities during peak hours",
      "ML model for time prediction"
    ],
    "effort": 8,
    "business_value": 8,
    "dependencies": [
      "027"
    ],
    "technical_notes": "Use historical response data to train model",
    "owner": null,
    "is_next": false,
    "display_order": 75,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "029",
    "project": "Sales Genie",
    "epic": "fanatical",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a system, I need Rejection Intelligence Agent so that I can learn from every rejection",
    "acceptance_criteria": [
      "Track all rejection reasons",
      "Analyze rejection patterns",
      "Optimize follow-up timing",
      "Improve messaging based on learnings"
    ],
    "effort": 8,
    "business_value": 7,
    "dependencies": [
      "027",
      "016"
    ],
    "technical_notes": "Transforms rejection into learning fuel",
    "owner": null,
    "is_next": false,
    "display_order": 76,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "030",
    "project": "Sales Genie",
    "epic": "fanatical",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a system, I need Competitive Intelligence Agent so that I can outmaneuver competitors",
    "acceptance_criteria": [
      "Monitor competitor activities",
      "Generate battlecards",
      "Detect competitive threats",
      "Deploy counter-strategies"
    ],
    "effort": 13,
    "business_value": 6,
    "dependencies": [
      "027"
    ],
    "technical_notes": "Web scraping + news monitoring + CRM intelligence",
    "owner": null,
    "is_next": false,
    "display_order": 77,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "031",
    "project": "Sales Genie",
    "epic": "content",
    "priority": "CRITICAL",
    "status": "NOT_STARTED",
    "user_story": "As a marketer, I need AI content generation so that I can create engaging posts at scale",
    "acceptance_criteria": [
      "Content generation agent with CrewAI",
      "Market News Monitor for real-time analysis",
      "Data Analyst for trend identification",
      "Content Creator for multi-format output",
      "Quality Assurance agent for review"
    ],
    "effort": 13,
    "business_value": 10,
    "dependencies": [
      "027"
    ],
    "technical_notes": "Based on Archive/Content Creation system - 4 specialized agents working in pipeline",
    "owner": null,
    "is_next": true,
    "display_order": 63,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "032",
    "project": "Sales Genie",
    "epic": "content",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a content manager, I need blog post generation so that I can maintain consistent content",
    "acceptance_criteria": [
      "Automated blog post creation",
      "SEO optimization included",
      "Markdown formatting",
      "Image suggestions and integration",
      "Multiple draft variations"
    ],
    "effort": 8,
    "business_value": 7,
    "dependencies": [
      "031"
    ],
    "technical_notes": "Blog posts with integrated multimedia, proper headers and formatting",
    "owner": null,
    "is_next": true,
    "display_order": 78,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "033",
    "project": "Sales Genie",
    "epic": "content",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a social media manager, I need multi-platform post generation so that I can scale social presence",
    "acceptance_criteria": [
      "Platform-specific content (LinkedIn, Twitter, Instagram, Facebook)",
      "Character limit optimization",
      "Hashtag generation",
      "Image caption creation",
      "Posting schedule recommendations"
    ],
    "effort": 8,
    "business_value": 9,
    "dependencies": [
      "031"
    ],
    "technical_notes": "Multi-format content for different platforms with optimization",
    "owner": null,
    "is_next": false,
    "display_order": 79,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "034",
    "project": "Sales Genie",
    "epic": "content",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a content strategist, I need content calendar planning so that I can schedule posts strategically",
    "acceptance_criteria": [
      "AI-powered content calendar",
      "Optimal posting time recommendations",
      "Topic clustering and themes",
      "Content gap analysis",
      "Automated scheduling integration"
    ],
    "effort": 5,
    "business_value": 6,
    "dependencies": [
      "033"
    ],
    "technical_notes": "Integrates with social media scheduling tools",
    "owner": null,
    "is_next": true,
    "display_order": 81,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "035",
    "project": "Sales Genie",
    "epic": "content",
    "priority": "LOW",
    "status": "NOT_STARTED",
    "user_story": "As a content creator, I need visual content suggestions so that posts have engaging imagery",
    "acceptance_criteria": [
      "AI image generation integration (DALL-E/Midjourney)",
      "Stock photo recommendations",
      "Infographic template generation",
      "Video script creation",
      "Visual brand consistency"
    ],
    "effort": 8,
    "business_value": 5,
    "dependencies": [
      "031"
    ],
    "technical_notes": "Integration with image generation APIs and stock photo services",
    "owner": null,
    "is_next": true,
    "display_order": 64,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "036",
    "project": "Sales Genie",
    "epic": "content",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a brand manager, I need content performance analytics so that I can optimize strategy",
    "acceptance_criteria": [
      "Content engagement metrics",
      "A/B testing results",
      "Audience sentiment analysis",
      "Topic performance tracking",
      "ROI measurement per content type"
    ],
    "effort": 5,
    "business_value": 7,
    "dependencies": [
      "033"
    ],
    "technical_notes": "Analytics dashboard with ML-based insights",
    "owner": null,
    "is_next": false,
    "display_order": 80,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "037",
    "project": "Sales Genie",
    "epic": "social",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a social media manager, I need LinkedIn posting automation so that I can maintain consistent presence",
    "acceptance_criteria": [
      "LinkedIn API integration for posting",
      "Automated post scheduling",
      "Image and video upload support",
      "Engagement tracking (likes, comments, shares)",
      "Analytics dashboard"
    ],
    "effort": 8,
    "business_value": 9,
    "dependencies": [
      "033"
    ],
    "technical_notes": "LinkedIn API v2 for company pages and personal profiles",
    "owner": null,
    "is_next": true,
    "display_order": 82,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "038",
    "project": "Sales Genie",
    "epic": "social",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a social media manager, I need Twitter/X posting automation so that I can scale thought leadership",
    "acceptance_criteria": [
      "Twitter API v2 integration",
      "Tweet scheduling and threading",
      "Media upload (images, videos, GIFs)",
      "Reply and engagement automation",
      "Trending topic monitoring"
    ],
    "effort": 8,
    "business_value": 8,
    "dependencies": [
      "033"
    ],
    "technical_notes": "Twitter API v2 with elevated access for automation",
    "owner": null,
    "is_next": false,
    "display_order": 83,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "039",
    "project": "Sales Genie",
    "epic": "social",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a social media manager, I need Instagram posting automation so that I can reach visual audiences",
    "acceptance_criteria": [
      "Instagram Graph API integration",
      "Photo and video post automation",
      "Stories scheduling",
      "Carousel posts support",
      "Hashtag optimization"
    ],
    "effort": 8,
    "business_value": 7,
    "dependencies": [
      "033"
    ],
    "technical_notes": "Instagram Graph API for business accounts only",
    "owner": null,
    "is_next": false,
    "display_order": 84,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "040",
    "project": "Sales Genie",
    "epic": "social",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a social media manager, I need Facebook posting automation so that I can manage pages efficiently",
    "acceptance_criteria": [
      "Facebook Graph API integration",
      "Page post scheduling",
      "Multiple page management",
      "Group posting capability",
      "Ad campaign integration"
    ],
    "effort": 8,
    "business_value": 6,
    "dependencies": [
      "033"
    ],
    "technical_notes": "Facebook Business API for page management",
    "owner": null,
    "is_next": false,
    "display_order": 85,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "041",
    "project": "Sales Genie",
    "epic": "social",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a marketer, I need Instagram DM automation so that I can do personalized B2C outreach",
    "acceptance_criteria": [
      "Instagram Messaging API integration",
      "DM template management",
      "Automated response flows",
      "Lead qualification via DM",
      "ToS-compliant rate limiting"
    ],
    "effort": 8,
    "business_value": 7,
    "dependencies": [
      "039",
      "031"
    ],
    "technical_notes": "Instagram Messaging API with business account requirements",
    "owner": null,
    "is_next": false,
    "display_order": 86,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "042",
    "project": "Sales Genie",
    "epic": "social",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a marketer, I need Facebook Messenger automation so that I can engage with community prospects",
    "acceptance_criteria": [
      "Facebook Messenger Platform integration",
      "Chatbot flow builder",
      "Lead capture and qualification",
      "CRM integration",
      "Multi-lingual support"
    ],
    "effort": 8,
    "business_value": 6,
    "dependencies": [
      "040",
      "031"
    ],
    "technical_notes": "Messenger Platform API with webhook integration",
    "owner": null,
    "is_next": false,
    "display_order": 87,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "043",
    "project": "Sales Genie",
    "epic": "social",
    "priority": "LOW",
    "status": "NOT_STARTED",
    "user_story": "As a marketer, I need WhatsApp Business automation so that I can reach international prospects",
    "acceptance_criteria": [
      "WhatsApp Business API integration",
      "Message template management",
      "Automated follow-ups",
      "Multi-agent support",
      "Media message support"
    ],
    "effort": 8,
    "business_value": 5,
    "dependencies": [
      "031"
    ],
    "technical_notes": "WhatsApp Business API requires Facebook Business verification",
    "owner": null,
    "is_next": false,
    "display_order": 88,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "044",
    "project": "Sales Genie",
    "epic": "social",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a social media manager, I need unified social media dashboard so that I can manage all platforms",
    "acceptance_criteria": [
      "Single dashboard for all social platforms",
      "Cross-platform analytics",
      "Unified content calendar",
      "Engagement monitoring",
      "Team collaboration tools"
    ],
    "effort": 13,
    "business_value": 9,
    "dependencies": [
      "037",
      "038",
      "039",
      "040"
    ],
    "technical_notes": "Unified UI for LinkedIn, Twitter, Instagram, Facebook management",
    "owner": null,
    "is_next": false,
    "display_order": 89,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "045",
    "project": "Sales Genie",
    "epic": "social",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a marketer, I need social listening agent so that I can monitor brand mentions and trends",
    "acceptance_criteria": [
      "Real-time mention monitoring",
      "Sentiment analysis",
      "Competitor tracking",
      "Trending topic detection",
      "Automated alerts"
    ],
    "effort": 13,
    "business_value": 7,
    "dependencies": [
      "044"
    ],
    "technical_notes": "Streaming APIs from all platforms + NLP sentiment analysis",
    "owner": null,
    "is_next": true,
    "display_order": 90,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "046",
    "project": "Sales Genie",
    "epic": "social",
    "priority": "LOW",
    "status": "NOT_STARTED",
    "user_story": "As a growth hacker, I need influencer outreach automation so that I can scale partnership opportunities",
    "acceptance_criteria": [
      "Influencer discovery and scoring",
      "Automated outreach campaigns",
      "Relationship tracking",
      "Performance analytics",
      "Contract management"
    ],
    "effort": 13,
    "business_value": 6,
    "dependencies": [
      "044",
      "031"
    ],
    "technical_notes": "Cross-platform influencer identification and engagement",
    "owner": null,
    "is_next": false,
    "display_order": 91,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "047",
    "project": "Sales Genie",
    "epic": "crm",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a sales manager, I need CRM integration so that I can sync prospects with my existing CRM",
    "acceptance_criteria": [
      "Salesforce API integration",
      "HubSpot API integration",
      "Pipedrive API integration",
      "Bi-directional sync (prospects, contacts, deals)",
      "Custom field mapping"
    ],
    "effort": 13,
    "business_value": 9,
    "dependencies": [
      "003"
    ],
    "technical_notes": "REST APIs for major CRMs - OAuth authentication required",
    "owner": null,
    "is_next": false,
    "display_order": 92,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "048",
    "project": "Sales Genie",
    "epic": "crm",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a sales rep, I need pipeline management so that I can track deals through stages",
    "acceptance_criteria": [
      "Customizable pipeline stages",
      "Drag-and-drop deal movement",
      "Pipeline value calculations",
      "Stage conversion tracking",
      "Deal probability scoring"
    ],
    "effort": 13,
    "business_value": 10,
    "dependencies": [],
    "technical_notes": "Kanban-style pipeline UI with drag-and-drop, stage automation\nCopy Pipedrive pipeline layout & functions\n",
    "owner": null,
    "is_next": false,
    "display_order": 93,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "049",
    "project": "Sales Genie",
    "epic": "crm",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a sales rep, I need meeting scheduling so that I can book meetings with prospects",
    "acceptance_criteria": [
      "Calendar integration (Google, Outlook)",
      "Availability checking",
      "Automated meeting links (Zoom, Teams, Meet)",
      "Email confirmations and reminders",
      "Time zone handling"
    ],
    "effort": 8,
    "business_value": 8,
    "dependencies": [
      "004"
    ],
    "technical_notes": "Google Calendar API, Microsoft Graph API for Outlook",
    "owner": null,
    "is_next": false,
    "display_order": 94,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "050",
    "project": "Sales Genie",
    "epic": "crm",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a sales manager, I need activity tracking so that I can see all prospect interactions",
    "acceptance_criteria": [
      "Email tracking (opens, clicks, replies)",
      "Call logging and recording",
      "Meeting notes and outcomes",
      "Task completion tracking",
      "Timeline view of all activities"
    ],
    "effort": 8,
    "business_value": 7,
    "dependencies": [
      "004"
    ],
    "technical_notes": "Activity logging system with timeline UI",
    "owner": null,
    "is_next": false,
    "display_order": 95,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "051",
    "project": "Sales Genie",
    "epic": "crm",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a sales rep, I need lead scoring so that I can prioritize high-value prospects",
    "acceptance_criteria": [
      "AI-powered lead scoring model",
      "Behavioral scoring (email opens, website visits)",
      "Firmographic scoring (company size, industry)",
      "Engagement scoring (response rate, meeting attendance)",
      "Score explanations and insights"
    ],
    "effort": 13,
    "business_value": 9,
    "dependencies": [
      "003",
      "015"
    ],
    "technical_notes": "ML model using historical conversion data + real-time signals",
    "owner": null,
    "is_next": false,
    "display_order": 96,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "052",
    "project": "Sales Genie",
    "epic": "crm",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a sales manager, I need team collaboration so that my team can work together on deals",
    "acceptance_criteria": [
      "Deal assignment and ownership",
      "Internal notes and comments",
      "Team activity feed",
      "@mentions and notifications",
      "Deal transfer workflow"
    ],
    "effort": 8,
    "business_value": 6,
    "dependencies": [
      "048"
    ],
    "technical_notes": "Team collaboration features with real-time updates",
    "owner": null,
    "is_next": false,
    "display_order": 97,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "053",
    "project": "Sales Genie",
    "epic": "analytics",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a sales manager, I need advanced analytics dashboard so that I can track team performance",
    "acceptance_criteria": [
      "Customizable dashboards",
      "Real-time metrics and KPIs",
      "Revenue forecasting",
      "Team leaderboards",
      "Goal tracking and progress"
    ],
    "effort": 13,
    "business_value": 9,
    "dependencies": [
      "048"
    ],
    "technical_notes": "Business intelligence dashboard with drill-down capabilities",
    "owner": null,
    "is_next": false,
    "display_order": 98,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "054",
    "project": "Sales Genie",
    "epic": "analytics",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a marketer, I need campaign attribution so that I can measure ROI by channel",
    "acceptance_criteria": [
      "Multi-touch attribution modeling",
      "Channel performance comparison",
      "Cost per lead/acquisition tracking",
      "Conversion funnel analysis",
      "ROI calculations by campaign"
    ],
    "effort": 13,
    "business_value": 8,
    "dependencies": [
      "053"
    ],
    "technical_notes": "Attribution engine with first-touch, last-touch, and multi-touch models",
    "owner": null,
    "is_next": false,
    "display_order": 99,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "055",
    "project": "Sales Genie",
    "epic": "analytics",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a sales manager, I need predictive analytics so that I can forecast pipeline health",
    "acceptance_criteria": [
      "AI-powered deal win probability",
      "Revenue forecasting with confidence intervals",
      "Churn risk prediction",
      "Pipeline coverage analysis",
      "What-if scenario modeling"
    ],
    "effort": 13,
    "business_value": 8,
    "dependencies": [
      "053",
      "051"
    ],
    "technical_notes": "ML models for probability and forecasting using historical data",
    "owner": null,
    "is_next": false,
    "display_order": 100,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "056",
    "project": "Sales Genie",
    "epic": "analytics",
    "priority": "LOW",
    "status": "NOT_STARTED",
    "user_story": "As a sales ops leader, I need data export and reporting so that I can share insights with leadership",
    "acceptance_criteria": [
      "Scheduled report generation",
      "PDF and Excel export",
      "Email report distribution",
      "Custom report builder",
      "API access for external BI tools"
    ],
    "effort": 5,
    "business_value": 6,
    "dependencies": [
      "053"
    ],
    "technical_notes": "Report generation engine with scheduling and distribution",
    "owner": null,
    "is_next": false,
    "display_order": 101,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "057",
    "project": "Sales Genie",
    "epic": "production",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a user, I need performance monitoring dashboard so that I can track agent activity",
    "acceptance_criteria": [
      "Real-time agent status",
      "Activity metrics displayed",
      "Campaign performance graphs",
      "Error tracking and alerts"
    ],
    "effort": 8,
    "business_value": 6,
    "dependencies": [
      "003",
      "004"
    ],
    "technical_notes": "Prometheus + Grafana or custom dashboard",
    "owner": null,
    "is_next": false,
    "display_order": 102,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "058",
    "project": "Sales Genie",
    "epic": "production",
    "priority": "LOW",
    "status": "NOT_STARTED",
    "user_story": "As a system, I need rate limiting and security so that the API is protected",
    "acceptance_criteria": [
      "Rate limiting per IP/API key",
      "API key authentication",
      "Request validation",
      "SQL injection prevention",
      "CORS properly configured"
    ],
    "effort": 5,
    "business_value": 7,
    "dependencies": [
      "003"
    ],
    "technical_notes": "Express middleware for rate limiting, helmet.js for security headers",
    "owner": null,
    "is_next": true,
    "display_order": 130,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "059",
    "project": "GTM Spike",
    "epic": "product",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a product manager, I need to select the most marketable app (e.g., ISO27001) so that we can focus our GTM efforts",
    "acceptance_criteria": [
      "Research and identify most marketable app",
      "Document selection rationale",
      "Confirm with stakeholders"
    ],
    "effort": 2,
    "business_value": 10,
    "dependencies": [],
    "technical_notes": "ISO27001 likely candidate due to broad regulatory appeal",
    "owner": null,
    "is_next": false,
    "display_order": 103,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "060",
    "project": "GTM Spike",
    "epic": "product",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a user, I need show/hide feature toggles so that I can customize what functionality is visible",
    "acceptance_criteria": [
      "Build feature flag system",
      "Add UI controls for show/hide",
      "Persist user preferences",
      "Test all feature combinations"
    ],
    "effort": 5,
    "business_value": 8,
    "dependencies": [
      "059"
    ],
    "technical_notes": "Use feature flag library or build simple toggle system",
    "owner": null,
    "is_next": false,
    "display_order": 104,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "061",
    "project": "GTM Spike",
    "epic": "product",
    "priority": "CRITICAL",
    "status": "NOT_STARTED",
    "user_story": "As a prospect, I need clear calls to action (Buy now / Book a call) so that I can take next steps",
    "acceptance_criteria": [
      "Add \"Buy now\" CTA button",
      "Add \"Book a call to discuss\" CTA button",
      "Position CTAs prominently",
      "Ensure CTAs work on mobile",
      "Track CTA click events"
    ],
    "effort": 3,
    "business_value": 10,
    "dependencies": [
      "059"
    ],
    "technical_notes": "Link to payment flow and Calendly/booking system",
    "owner": null,
    "is_next": false,
    "display_order": 105,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "062",
    "project": "GTM Spike",
    "epic": "product",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a new user, I need a quick start help guide so that I can get up to speed quickly",
    "acceptance_criteria": [
      "Create getting started guide",
      "Add progressive disclosure of help",
      "Include video walkthrough",
      "Test with new users"
    ],
    "effort": 5,
    "business_value": 8,
    "dependencies": [
      "059"
    ],
    "technical_notes": "Interactive onboarding flow with tooltips",
    "owner": null,
    "is_next": false,
    "display_order": 106,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "063",
    "project": "GTM Spike",
    "epic": "product",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a user, I need tooltips throughout the UI so that the demo app is completely self-explanatory",
    "acceptance_criteria": [
      "Add tooltips to all UI elements",
      "Ensure tooltips are contextual",
      "Test tooltip accessibility",
      "Verify mobile tooltip behavior"
    ],
    "effort": 8,
    "business_value": 9,
    "dependencies": [
      "059"
    ],
    "technical_notes": "Use tooltip library like Tippy.js or Radix UI",
    "owner": null,
    "is_next": false,
    "display_order": 107,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "064",
    "project": "GTM Spike",
    "epic": "product",
    "priority": "CRITICAL",
    "status": "NOT_STARTED",
    "user_story": "As a user, I need all buttons to be clickable and produce results so that the demo feels complete",
    "acceptance_criteria": [
      "Audit all buttons in demo",
      "Wire up all button actions",
      "Add loading/success states",
      "Test all interactions"
    ],
    "effort": 8,
    "business_value": 10,
    "dependencies": [
      "059"
    ],
    "technical_notes": "Complete all interactive elements with real or mock data",
    "owner": null,
    "is_next": false,
    "display_order": 108,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "065",
    "project": "GTM Spike",
    "epic": "product",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a small company user, I need a minimal feature set so that the product is not overwhelming",
    "acceptance_criteria": [
      "Identify core features for small companies",
      "Remove or hide advanced features",
      "Create simplified workflows",
      "Test with small company users"
    ],
    "effort": 5,
    "business_value": 8,
    "dependencies": [
      "059",
      "060"
    ],
    "technical_notes": "Use feature flags to create \"essentials\" mode",
    "owner": null,
    "is_next": false,
    "display_order": 109,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "066",
    "project": "GTM Spike",
    "epic": "product",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a system, I need to connect to the regulatory service layer so that compliance data is live",
    "acceptance_criteria": [
      "Design API integration architecture",
      "Connect to regulatory service",
      "Map data structures",
      "Handle API errors gracefully",
      "Test with real regulatory data"
    ],
    "effort": 13,
    "business_value": 10,
    "dependencies": [
      "059"
    ],
    "technical_notes": "RESTful API integration with caching strategy",
    "owner": null,
    "is_next": false,
    "display_order": 110,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "067",
    "project": "GTM Spike",
    "epic": "Deployment",
    "priority": "CRITICAL",
    "status": "NOT_STARTED",
    "user_story": "As a customer, I need to buy and deploy immediately so that I can start using the product right away",
    "acceptance_criteria": [
      "Automated deployment pipeline",
      "Customer receives access within 5 minutes",
      "Zero manual intervention required",
      "Test full purchase-to-deploy flow"
    ],
    "effort": 8,
    "business_value": 10,
    "dependencies": [],
    "technical_notes": "Automated provisioning with Vercel/similar",
    "owner": null,
    "is_next": false,
    "display_order": 111,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "068",
    "project": "GTM Spike",
    "epic": "Deployment",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As an operator, I need fast manual deployment capability so that I can quickly provision customers",
    "acceptance_criteria": [
      "Document manual deployment process",
      "Create deployment scripts",
      "Deploy in under 10 minutes",
      "Test repeatability"
    ],
    "effort": 3,
    "business_value": 8,
    "dependencies": [],
    "technical_notes": "Shell scripts or Ansible playbooks for quick deployment",
    "owner": null,
    "is_next": false,
    "display_order": 112,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "069",
    "project": "GTM Spike",
    "epic": "Marketing",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a marketer, I need to create a marketing microsite with high-value content so that we can attract leads",
    "acceptance_criteria": [
      "Build landing page with value proposition",
      "Add compliance tips and resources",
      "Optimize for SEO",
      "Mobile responsive design",
      "Fast page load times"
    ],
    "effort": 8,
    "business_value": 9,
    "dependencies": [],
    "technical_notes": "Next.js static site with MDX for content",
    "owner": null,
    "is_next": false,
    "display_order": 113,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "070",
    "project": "GTM Spike",
    "epic": "Marketing",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a prospect, I need to see a massive value proposition (high-value, low-price) so that I am motivated to buy",
    "acceptance_criteria": [
      "Clear value statement above the fold",
      "Pricing prominently displayed",
      "ROI calculator or comparison chart",
      "Customer testimonials/social proof"
    ],
    "effort": 5,
    "business_value": 10,
    "dependencies": [
      "069"
    ],
    "technical_notes": "Compelling copywriting with visual hierarchy",
    "owner": null,
    "is_next": false,
    "display_order": 114,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "071",
    "project": "GTM Spike",
    "epic": "purchase",
    "priority": "CRITICAL",
    "status": "NOT_STARTED",
    "user_story": "As a customer, I need a payment process so that I can purchase the product",
    "acceptance_criteria": [
      "Integrate Stripe or similar payment processor",
      "Support credit card payments",
      "Generate invoices automatically",
      "Handle payment failures gracefully",
      "PCI compliance"
    ],
    "effort": 8,
    "business_value": 10,
    "dependencies": [],
    "technical_notes": "Stripe Checkout or Payment Links for quick setup",
    "owner": null,
    "is_next": false,
    "display_order": 115,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "072",
    "project": "GTM Spike",
    "epic": "leadgen",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a sales team, I need outbound email and prospecting links working in Sales Genie so that we can generate leads",
    "acceptance_criteria": [
      "Email sending functional",
      "Link tracking working",
      "CRM integration active",
      "Email templates tested",
      "Bounce handling configured"
    ],
    "effort": 8,
    "business_value": 9,
    "dependencies": [],
    "technical_notes": "Integrate with Sales Genie outreach agent",
    "owner": null,
    "is_next": false,
    "display_order": 116,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "073",
    "project": "Sales Genie",
    "epic": "tracking",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a developer, I need a privacy-compliant consent management system so that we can legally track prospects across channels",
    "acceptance_criteria": [
      "Cookie consent banner implemented with GDPR/CCPA compliance",
      "Consent preferences stored per prospect",
      "Opt-in/opt-out mechanisms functional",
      "Consent audit log maintained",
      "Privacy policy integration complete",
      "Consent verification before any tracking begins"
    ],
    "effort": 5,
    "business_value": 10,
    "dependencies": [
      "001"
    ],
    "technical_notes": "Use OneTrust or CookieBot SDK. Must implement before any tracking. Store consent in prospects table with timestamps.",
    "owner": null,
    "is_next": false,
    "display_order": 117,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "074",
    "project": "Sales Genie",
    "epic": "tracking",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a system, I need web tracking pixel infrastructure so that I can capture prospect behavior on web properties",
    "acceptance_criteria": [
      "JavaScript tracking SDK deployed",
      "Page view tracking functional",
      "Click event tracking implemented",
      "Time-on-page metrics captured",
      "Unique visitor ID assignment working",
      "Cross-domain tracking enabled",
      "Events sent to CDP API in real-time"
    ],
    "effort": 8,
    "business_value": 10,
    "dependencies": [
      "073",
      "075"
    ],
    "technical_notes": "Lightweight JS (<5KB) with async loading. Use first-party cookies. Implement session stitching across devices.",
    "owner": null,
    "is_next": false,
    "display_order": 118,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "075",
    "project": "Sales Genie",
    "epic": "cdp",
    "priority": "CRITICAL",
    "status": "NOT_STARTED",
    "user_story": "As a system, I need a Customer Data Platform (CDP) so that I can centralize all prospect behavioral data",
    "acceptance_criteria": [
      "CDP database schema designed and deployed",
      "Event ingestion API created (REST + webhooks)",
      "Real-time data processing pipeline functional",
      "Identity resolution logic implemented",
      "Profile unification across devices/sessions working",
      "Data retention policies configured",
      "API for profile queries operational"
    ],
    "effort": 13,
    "business_value": 10,
    "dependencies": [
      "001",
      "008"
    ],
    "technical_notes": "Use PostgreSQL for CDP data store. Redis for real-time event streaming. Implement UUID-based tracking IDs with deterministic hashing for identity resolution.",
    "owner": null,
    "is_next": false,
    "display_order": 119,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "076",
    "project": "Sales Genie",
    "epic": "tracking",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As Outreach Agent, I need email tracking pixels so that I can detect opens, clicks, and engagement",
    "acceptance_criteria": [
      "1x1 transparent pixel embedded in emails",
      "Open tracking functional with timestamps",
      "Link click tracking with URL wrapping",
      "Device and location data captured",
      "Email client detection working",
      "Tracking data sent to CDP",
      "Privacy-compliant implementation"
    ],
    "effort": 5,
    "business_value": 9,
    "dependencies": [
      "073",
      "075",
      "006"
    ],
    "technical_notes": "Use base64 encoded GIF. Implement URL shortener with redirect tracking. Store in email_engagement table linked to CDP.",
    "owner": null,
    "is_next": false,
    "display_order": 120,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "077",
    "project": "Sales Genie",
    "epic": "cdp",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a system, I need real-time behavioral scoring so that prospects are dynamically ranked by engagement",
    "acceptance_criteria": [
      "Scoring algorithm defined (recency, frequency, engagement depth)",
      "Real-time score calculation on event ingestion",
      "Lead scoring models configurable",
      "Hot/warm/cold prospect segmentation automatic",
      "Score changes trigger workflow events",
      "Historical scoring data preserved",
      "Dashboard displays current scores"
    ],
    "effort": 8,
    "business_value": 9,
    "dependencies": [
      "075",
      "074",
      "076"
    ],
    "technical_notes": "ML-based scoring with configurable weights. Use Redis for real-time scoring cache. Trigger webhooks on score threshold changes.",
    "owner": null,
    "is_next": false,
    "display_order": 121,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "078",
    "project": "Sales Genie",
    "epic": "personalization",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a marketer, I need dynamic content personalization engine so that each prospect sees relevant content",
    "acceptance_criteria": [
      "Content variation library created",
      "Personalization rules engine implemented",
      "A/B testing framework functional",
      "Real-time content assembly based on profile",
      "Performance metrics tracked per variation",
      "API for content delivery operational",
      "Supports text, images, and CTAs"
    ],
    "effort": 13,
    "business_value": 9,
    "dependencies": [
      "075",
      "077"
    ],
    "technical_notes": "Use template engine with slot-based content injection. Cache personalized content in Redis. Implement predictive content selection using ML.",
    "owner": null,
    "is_next": true,
    "display_order": 122,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "079",
    "project": "Sales Genie",
    "epic": "orchestration",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a system, I need cross-channel campaign orchestration so that prospects receive coordinated multi-touch outreach",
    "acceptance_criteria": [
      "Campaign workflow engine implemented",
      "Multi-channel sequence builder created",
      "Trigger-based automation functional",
      "Channel coordination logic working (email + web + social)",
      "Frequency capping enforced",
      "Campaign analytics dashboard operational",
      "API/webhook integrations for all channels"
    ],
    "effort": 13,
    "business_value": 10,
    "dependencies": [
      "075",
      "077",
      "078"
    ],
    "technical_notes": "Use workflow DAG (directed acyclic graph) for sequence definition. Integrate with existing agents via API. Support time delays and conditional branching.",
    "owner": null,
    "is_next": true,
    "display_order": 123,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "080",
    "project": "Sales Genie",
    "epic": "integration",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a marketer, I need social media pixel integration so that I can track prospects across LinkedIn and Facebook",
    "acceptance_criteria": [
      "LinkedIn Insight Tag integrated",
      "Facebook Pixel integrated",
      "Conversion events configured",
      "Audience syncing operational",
      "Retargeting audiences created automatically",
      "Attribution tracking functional",
      "Privacy compliance maintained"
    ],
    "effort": 8,
    "business_value": 8,
    "dependencies": [
      "073",
      "074",
      "075"
    ],
    "technical_notes": "Use LinkedIn Conversion API and Facebook Conversions API for server-side tracking. Implement custom audience sync via API.",
    "owner": null,
    "is_next": false,
    "display_order": 124,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "081",
    "project": "Sales Genie",
    "epic": "analytics",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a marketer, I need a prospect journey dashboard so that I can visualize cross-channel engagement",
    "acceptance_criteria": [
      "Journey visualization UI created",
      "Timeline view of all touchpoints",
      "Channel attribution displayed",
      "Engagement metrics shown (opens, clicks, visits)",
      "Conversion funnel analytics",
      "Export functionality (CSV, PDF)",
      "Real-time updates via WebSocket"
    ],
    "effort": 8,
    "business_value": 8,
    "dependencies": [
      "075",
      "077",
      "079"
    ],
    "technical_notes": "Use D3.js or React Flow for journey visualization. WebSocket for real-time updates. Store journey snapshots for historical analysis.",
    "owner": null,
    "is_next": false,
    "display_order": 125,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "082",
    "project": "Sales Genie",
    "epic": "analytics",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a sales manager, I need campaign effectiveness dashboard so that I can measure ROI across channels",
    "acceptance_criteria": [
      "Campaign performance metrics calculated",
      "Multi-touch attribution model implemented",
      "Channel effectiveness comparison view",
      "Conversion tracking and reporting",
      "Cost-per-acquisition metrics",
      "A/B test results visualization",
      "Automated insights and recommendations"
    ],
    "effort": 8,
    "business_value": 9,
    "dependencies": [
      "079",
      "081"
    ],
    "technical_notes": "Implement first-touch, last-touch, and linear attribution models. Use ML for predictive ROI scoring.",
    "owner": null,
    "is_next": false,
    "display_order": 126,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "083",
    "project": "Sales Genie",
    "epic": "personalization",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a system, I need predictive next-best-action engine so that optimal outreach is automated",
    "acceptance_criteria": [
      "ML model trained on historical engagement data",
      "Real-time prediction API functional",
      "Action recommendations generated per prospect",
      "Confidence scores provided",
      "Model retraining pipeline automated",
      "A/B testing of predictions vs control",
      "Integration with orchestration engine"
    ],
    "effort": 13,
    "business_value": 9,
    "dependencies": [
      "077",
      "079",
      "081"
    ],
    "technical_notes": "Use scikit-learn or TensorFlow for ML models. Feature engineering from CDP data. Deploy model via FastAPI endpoint.",
    "owner": null,
    "is_next": false,
    "display_order": 127,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "084",
    "project": "Sales Genie",
    "epic": "tracking",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a system, I need cross-device identity resolution so that prospects are tracked across all devices",
    "acceptance_criteria": [
      "Deterministic matching (email, phone) implemented",
      "Probabilistic matching algorithm functional",
      "Device graph constructed and maintained",
      "Identity merge/split logic working",
      "Confidence scores for matches",
      "Privacy-compliant implementation",
      "API for identity lookup operational"
    ],
    "effort": 13,
    "business_value": 8,
    "dependencies": [
      "075"
    ],
    "technical_notes": "Use fingerprinting (user-agent, IP, behavioral patterns) combined with deterministic signals. Implement graph database (Neo4j) for identity relationships.",
    "owner": null,
    "is_next": false,
    "display_order": 128,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "085",
    "project": "Sales Genie",
    "epic": "orchestration",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a system, I need behavioral trigger automation so that campaigns respond to prospect actions in real-time",
    "acceptance_criteria": [
      "Event-driven trigger system implemented",
      "Configurable trigger rules (if-then logic)",
      "Real-time event processing (<1 second latency)",
      "Trigger action execution (send email, update score, etc)",
      "Trigger history and audit log",
      "Rate limiting and anti-spam controls",
      "Integration with all channels"
    ],
    "effort": 8,
    "business_value": 9,
    "dependencies": [
      "075",
      "079"
    ],
    "technical_notes": "Use event streaming (Kafka or Redis Streams) with rule engine. Implement circuit breaker pattern to prevent overload.",
    "owner": null,
    "is_next": true,
    "display_order": 129,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "086",
    "project": "Sales Genie",
    "epic": "compliance",
    "priority": "CRITICAL",
    "status": "NOT_STARTED",
    "user_story": "As a compliance officer, I need data privacy controls so that we meet GDPR, CCPA, and privacy regulations",
    "acceptance_criteria": [
      "Right to access implemented (data export)",
      "Right to deletion implemented (data erasure)",
      "Right to portability functional",
      "Opt-out mechanisms working across all channels",
      "Data processing agreements enforced",
      "Privacy policy updated and accessible",
      "Audit trail for all data access/changes",
      "DPO notification workflows implemented"
    ],
    "effort": 8,
    "business_value": 10,
    "dependencies": [
      "073",
      "075"
    ],
    "technical_notes": "Implement data retention policies with automatic deletion. Create self-service privacy portal. Encrypt PII at rest and in transit.",
    "owner": null,
    "is_next": false,
    "display_order": 131,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "087",
    "project": "Sales Genie",
    "epic": "infrastructure",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a DevOps engineer, I need scalable event ingestion infrastructure so that we can handle high-volume tracking data",
    "acceptance_criteria": [
      "Event ingestion API can handle 10k+ events/sec",
      "Message queue implemented (Kafka/RabbitMQ)",
      "Auto-scaling configured for traffic spikes",
      "Event batching and buffering optimized",
      "Dead letter queue for failed events",
      "Monitoring and alerting operational",
      "Data pipeline resilience tested"
    ],
    "effort": 13,
    "business_value": 8,
    "dependencies": [
      "075",
      "087"
    ],
    "technical_notes": "Use Kafka or AWS Kinesis for event streaming. Implement backpressure handling. Deploy with Kubernetes for auto-scaling.",
    "owner": null,
    "is_next": false,
    "display_order": 132,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "088",
    "project": "Sales Genie",
    "epic": "cdp",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a data analyst, I need CDP data warehouse integration so that I can perform advanced analytics",
    "acceptance_criteria": [
      "ETL pipeline to data warehouse operational",
      "Historical data archived and queryable",
      "SQL access for analysts provided",
      "BI tool integration (Tableau/PowerBI)",
      "Data models optimized for analytics",
      "Scheduled data refresh working",
      "Data quality monitoring implemented"
    ],
    "effort": 8,
    "business_value": 7,
    "dependencies": [
      "075"
    ],
    "technical_notes": "Use dbt for data transformation. Implement star schema for analytics. Consider Snowflake or BigQuery for warehouse.",
    "owner": null,
    "is_next": false,
    "display_order": 133,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "089",
    "project": "Sales Genie",
    "epic": "crm",
    "priority": "CRITICAL",
    "status": "NOT_STARTED",
    "user_story": "As a user, I need a prospects table view so that I can review all imported prospects with filtering and sorting",
    "acceptance_criteria": [
      "Prospects table displays all imported records",
      "Columns: Name, Role, Company, Email, Phone, Geography, Company Size, Industry, Source, Status",
      "Sortable by any column",
      "Advanced filtering by: Person, Role, Company, Geography, Company Size, Industry",
      "Multi-select filtering (e.g., select multiple industries)",
      "Search functionality across all fields",
      "Pagination for large datasets (2,500+ records)",
      "Export filtered results to CSV",
      "Bulk actions (select all, select filtered)",
      "Mobile-responsive table view"
    ],
    "effort": 8,
    "business_value": 10,
    "dependencies": [
      "015",
      "003"
    ],
    "technical_notes": "Use React Table or TanStack Table for advanced filtering/sorting. Implement virtual scrolling for performance with large datasets. Store filter state in URL params for shareable links.",
    "owner": null,
    "is_next": true,
    "display_order": 46,
    "created_at": "2025-10-02T19:16:55.711351+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "090",
    "project": "Sales Genie",
    "epic": "crm",
    "priority": "CRITICAL",
    "status": "NOT_STARTED",
    "user_story": "As a user, I need to edit prospect records so that I can correct and enrich prospect data",
    "acceptance_criteria": [
      "Click any prospect row to open edit modal",
      "Edit all fields: Name, Role, Company, Email, Phone, Geography, Company Size, Industry",
      "Add custom notes field for each prospect",
      "Add tags/labels to prospects",
      "Validation: Email format, phone format, required fields",
      "Save changes updates database in real-time",
      "Track edit history (who changed what, when)",
      "Inline editing for quick updates",
      "Bulk edit selected prospects",
      "Undo/redo capability"
    ],
    "effort": 5,
    "business_value": 8,
    "dependencies": [
      "089"
    ],
    "technical_notes": "Use optimistic updates with React Query. Store edit history in separate audit table. Implement field-level validation with Zod.",
    "owner": null,
    "is_next": true,
    "display_order": 47,
    "created_at": "2025-10-02T19:22:01.745006+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "091",
    "project": "Sales Genie",
    "epic": "integration",
    "priority": "CRITICAL",
    "status": "NOT_STARTED",
    "user_story": "As a user, I need email enrichment integration so that I can get verified email addresses for prospects",
    "acceptance_criteria": [
      "Integrate email finding tool (Apollo.io, Hunter.io, or Snov.io)",
      "Bulk email lookup for selected prospects",
      "Display confidence score for each email found",
      "Show verification status (verified, risky, invalid)",
      "Handle API rate limits gracefully with queue system",
      "Cost tracking per email lookup",
      "Fallback to secondary tool if primary fails",
      "Store email source and verification date",
      "Auto-skip prospects with existing verified emails",
      "Progress indicator for bulk operations"
    ],
    "effort": 8,
    "business_value": 10,
    "dependencies": [
      "017",
      "089"
    ],
    "technical_notes": "Implement job queue with Bull/BullMQ for async processing. Use Redis for rate limit tracking. Store API responses for caching. Consider using multiple providers with waterfall logic.",
    "owner": null,
    "is_next": true,
    "display_order": 51,
    "created_at": "2025-10-02T20:08:39.511523+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "092",
    "project": "Sales Genie",
    "epic": "crm",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a user, I need to include/exclude prospects individually so that I can control who receives campaigns",
    "acceptance_criteria": [
      "Checkbox selection for individual prospects",
      "Include/Exclude toggle for each prospect",
      "Visual indicator (color/icon) for excluded prospects",
      "Excluded prospects persist in database",
      "Reason field for exclusion (optional notes)",
      "Bulk include/exclude selected prospects",
      "Filter to show only included/excluded prospects",
      "Exclusion history tracking",
      "Re-include previously excluded prospects",
      "Excluded count shown in campaign selection"
    ],
    "effort": 5,
    "business_value": 9,
    "dependencies": [
      "089"
    ],
    "technical_notes": "Add 'is_excluded' boolean and 'exclusion_reason' text field to prospects table. Use soft delete pattern. Index for performance.",
    "owner": null,
    "is_next": true,
    "display_order": 53,
    "created_at": "2025-10-02T20:08:39.511523+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "093",
    "project": "Sales Genie",
    "epic": "crm",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a user, I need to select prospects for email campaigns so that I can target specific segments",
    "acceptance_criteria": [
      "Create campaign selection from filtered prospects view",
      "Save selections as named segments/lists",
      "Show selected count and estimated reach",
      "Preview selected prospects before creating campaign",
      "Combine multiple filters for advanced segmentation",
      "Save filter combinations as templates",
      "Dynamic segments (auto-update as new prospects match criteria)",
      "Static segments (fixed list at creation time)",
      "Exclude already-contacted prospects option",
      "Validate minimum selection size (e.g., need at least 1 prospect)"
    ],
    "effort": 5,
    "business_value": 9,
    "dependencies": [
      "089",
      "092"
    ],
    "technical_notes": "Create 'segments' table with filter_criteria JSON field. Use PostgreSQL JSONB queries for dynamic segments. Link segments to campaigns table.",
    "owner": null,
    "is_next": true,
    "display_order": 54,
    "created_at": "2025-10-02T20:08:39.511523+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "094",
    "project": "Sales Genie",
    "epic": "agents",
    "priority": "CRITICAL",
    "status": "NOT_STARTED",
    "user_story": "As a user, I need AI-generated email campaign sequences so that I can create personalized outreach at scale",
    "acceptance_criteria": [
      "Generate email sequence of 1-15 emails",
      "AI analyzes prospect data (role, company, industry) for personalization",
      "Each email has: subject line, body, delay timing",
      "Sequence follows best practices (value-first, no hard sell in email 1)",
      "Multiple tone options: Professional, Casual, Direct, Friendly",
      "Industry-specific templates",
      "A/B test variant generation for subject lines",
      "Incorporate user's company value proposition",
      "Follow-up emails reference previous emails in sequence",
      "Generate campaigns in <30 seconds"
    ],
    "effort": 13,
    "business_value": 10,
    "dependencies": [
      "002",
      "093"
    ],
    "technical_notes": "Use Mistral-7B with custom prompts. Create prompt templates per industry. Store sequence templates in database. Use structured output for consistent JSON format. Consider using GPT-4 for higher quality if budget allows.",
    "owner": null,
    "is_next": true,
    "display_order": 56,
    "created_at": "2025-10-02T20:08:39.511523+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "095",
    "project": "Sales Genie",
    "epic": "crm",
    "priority": "CRITICAL",
    "status": "NOT_STARTED",
    "user_story": "As a user, I need to review and edit AI-generated campaigns so that I can ensure quality before sending",
    "acceptance_criteria": [
      "Campaign preview shows all emails in sequence",
      "Edit subject line and body for each email",
      "Rich text editor with formatting options",
      "Personalization variables visible and editable ({{firstName}}, {{company}}, etc.)",
      "Preview how email renders for different prospects",
      "Test send to user's own email",
      "Save as draft for later editing",
      "Duplicate campaign to create variants",
      "Version history (track changes)",
      "Approval workflow (mark as reviewed/approved)"
    ],
    "effort": 8,
    "business_value": 9,
    "dependencies": [
      "094"
    ],
    "technical_notes": "Use TipTap or Quill for rich text editing. Store campaigns in draft status. Implement mustache/handlebars for variable substitution. Store versions in separate table.",
    "owner": null,
    "is_next": true,
    "display_order": 57,
    "created_at": "2025-10-02T20:08:39.511523+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "096",
    "project": "Sales Genie",
    "epic": "crm",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a user, I need email sequence timing controls so that campaigns feel natural and avoid spam filters",
    "acceptance_criteria": [
      "Set delay between emails (hours or days)",
      "Randomize send times within window (e.g., 9am-5pm ±30min)",
      "Respect business hours per timezone",
      "Skip weekends option",
      "Maximum emails per day per sender (rate limiting)",
      "Stop sequence on reply (don't send follow-ups)",
      "Stop sequence on bounce/unsubscribe",
      "Pause/resume campaigns",
      "Preview full timeline before launch",
      "Override timing for urgent campaigns"
    ],
    "effort": 8,
    "business_value": 9,
    "dependencies": [
      "094"
    ],
    "technical_notes": "Implement job scheduler with node-cron or Bull. Store next_send_time for each prospect-campaign. Check reply status before each send. Use timezone library (moment-timezone) for geography-aware timing.",
    "owner": null,
    "is_next": true,
    "display_order": 59,
    "created_at": "2025-10-02T20:08:39.511523+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "097",
    "project": "Sales Genie",
    "epic": "compliance",
    "priority": "CRITICAL",
    "status": "NOT_STARTED",
    "user_story": "As a system, I need email validation and compliance checks so that we maintain high deliverability and legal compliance",
    "acceptance_criteria": [
      "Validate email format before sending",
      "Check for disposable/temporary email domains",
      "Verify MX records exist for domain",
      "Auto-add unsubscribe link to every email (CAN-SPAM)",
      "Include physical mailing address in footer",
      "Unsubscribe processing within 10 business days",
      "Suppress list for unsubscribed emails (global)",
      "Bounce handling (hard bounce = remove, soft bounce = retry)",
      "Spam score checking before send",
      "GDPR consent tracking and evidence storage"
    ],
    "effort": 8,
    "business_value": 10,
    "dependencies": [
      "094"
    ],
    "technical_notes": "Use email-validator npm package and DNS lookup for MX records. Integrate with email verification API (NeverBounce, ZeroBounce). Create suppression_list table. Implement webhook handlers for bounces/unsubscribes.",
    "owner": null,
    "is_next": true,
    "display_order": 52,
    "created_at": "2025-10-02T20:08:39.511523+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "098",
    "project": "Sales Genie",
    "epic": "integration",
    "priority": "CRITICAL",
    "status": "NOT_STARTED",
    "user_story": "As Outreach Agent, I need email sending infrastructure so that I can send campaigns at scale",
    "acceptance_criteria": [
      "SMTP integration (SendGrid, AWS SES, or Mailgun)",
      "Support multiple sender email accounts",
      "Rotate between sender accounts for volume",
      "Track sending status per email (queued, sent, failed)",
      "Retry logic for failed sends",
      "Email tracking pixels for opens",
      "Link tracking for clicks",
      "Unsubscribe link injection",
      "Rate limiting per account (avoid spam filters)",
      "Sending dashboard with real-time status"
    ],
    "effort": 13,
    "business_value": 10,
    "dependencies": [
      "006",
      "094",
      "097"
    ],
    "technical_notes": "Use Nodemailer with SMTP pool. Implement round-robin account rotation. Use Bull queue for sending jobs. Store tracking pixels as 1x1 transparent GIF with unique ID. Use URL shortener for click tracking.",
    "owner": null,
    "is_next": true,
    "display_order": 58,
    "created_at": "2025-10-02T20:08:39.511523+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "099",
    "project": "Sales Genie",
    "epic": "analytics",
    "priority": "CRITICAL",
    "status": "NOT_STARTED",
    "user_story": "As a user, I need email open rate tracking so that I can measure engagement",
    "acceptance_criteria": [
      "Embed invisible tracking pixel in every email",
      "Record open events with timestamp",
      "Track unique opens vs total opens",
      "Capture device type (mobile, desktop)",
      "Capture email client (Gmail, Outlook, etc.)",
      "Capture geographic location (IP-based)",
      "Display open rate per campaign",
      "Display open rate per email in sequence",
      "Display open rate per prospect",
      "Real-time dashboard updates"
    ],
    "effort": 5,
    "business_value": 9,
    "dependencies": [
      "098"
    ],
    "technical_notes": "Use base64 encoded 1x1 GIF with unique tracking ID. Store opens in email_events table with event_type='open'. Extract user-agent for device/client detection. Use IP geolocation API for location.",
    "owner": null,
    "is_next": true,
    "display_order": 134,
    "created_at": "2025-10-02T20:08:39.511523+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "100",
    "project": "Sales Genie",
    "epic": "integration",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a user, I need email response monitoring so that I can see which prospects replied",
    "acceptance_criteria": [
      "Connect to sender email inbox via IMAP/API",
      "Monitor inbox for replies to sent emails",
      "Match replies to original campaigns using Message-ID headers",
      "Extract reply content and store in database",
      "Flag prospects who replied in prospects table",
      "Stop email sequence immediately on reply",
      "Notify user of new replies (in-app notification)",
      "Display reply thread in UI",
      "Sentiment analysis of replies (positive, neutral, negative)",
      "Auto-tag replies (interested, not interested, out of office, etc.)"
    ],
    "effort": 13,
    "business_value": 10,
    "dependencies": [
      "098"
    ],
    "technical_notes": "Use node-imap or Gmail API for inbox monitoring. Poll every 5 minutes. Store In-Reply-To and References headers for threading. Use simple sentiment analysis with natural or compromise npm. Create email_replies table.",
    "owner": null,
    "is_next": true,
    "display_order": 135,
    "created_at": "2025-10-02T20:08:39.511523+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "101",
    "project": "Sales Genie",
    "epic": "crm",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a user, I need response qualification workflow so that I can prioritize hot leads",
    "acceptance_criteria": [
      "Auto-categorize replies: Hot Lead, Warm Lead, Not Interested, Out of Office, Bounce",
      "Move qualified leads to separate pipeline",
      "Assign lead score based on reply sentiment and content",
      "Manual override for auto-categorization",
      "Notify sales rep of hot leads immediately",
      "Create task/reminder for follow-up",
      "Track response rate per campaign",
      "Display response timeline in prospect view",
      "Export qualified leads for CRM import",
      "Integration with calendar for meeting scheduling"
    ],
    "effort": 8,
    "business_value": 9,
    "dependencies": [
      "100"
    ],
    "technical_notes": "Use keyword matching and sentiment for auto-categorization. Store lead_score in prospects table. Create tasks table for follow-ups. Implement webhooks for CRM integration (HubSpot, Salesforce).",
    "owner": null,
    "is_next": true,
    "display_order": 136,
    "created_at": "2025-10-02T20:08:39.511523+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "102",
    "project": "Sales Genie",
    "epic": "integration",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a user, I need LinkedHelper CSV export so that I can export LinkedIn prospect data from Sales Genie to LinkedHelper",
    "acceptance_criteria": [
      "Support LinkedHelper CSV export format",
      "Map Sales Genie schema to LinkedHelper fields (Name, Role, Company, LinkedIn URL, etc.)",
      "Set this up as a new LinkedHelper campaign",
      "Tag prospects with source = \"SalesGenie\" (so that LinkedHelper will know source)",
      "Maximise use of any LinkedHelper automation to include API, MCP, and any other automation that LinkedHelper provides. ",
      "",
      "",
      "Validate and clean data during export",
      "Show export summary (records, duplicates, errors)",
      "Support bulk exports of 2,500+ records"
    ],
    "effort": 5,
    "business_value": 9,
    "dependencies": [
      "015",
      "089"
    ],
    "technical_notes": "Parse CSV with papaparse npm. Use LinkedIn URL as unique identifier for deduplication. Store import metadata (date, source, batch ID). Handle encoding issues (UTF-8).",
    "owner": null,
    "is_next": true,
    "display_order": 45,
    "created_at": "2025-10-03T05:46:59.540988+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "103",
    "project": "Sales Genie",
    "epic": "orchestration",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a user, I need LinkedIn-Email campaign coordination so that I can run multi-channel outreach",
    "acceptance_criteria": [
      "Define campaign channels: Email Only, LinkedIn Only, Email + LinkedIn",
      "LinkedIn touchpoints tracked manually (connection request sent, message sent, reply received)",
      "Coordinate timing: LinkedIn first, then email (or vice versa)",
      "Avoid duplicate outreach (don't email if LinkedIn reply received)",
      "Track LinkedIn engagement separately (profile views, connection accepts, message replies)",
      "Manual checklist for LinkedIn actions (since Linked Helper is external)",
      "Export prospects for Linked Helper campaigns",
      "Import LinkedIn activity logs from Linked Helper",
      "Display unified timeline of all touchpoints (email + LinkedIn)",
      "Campaign performance by channel"
    ],
    "effort": 13,
    "business_value": 9,
    "dependencies": [
      "102",
      "098"
    ],
    "technical_notes": "Create touchpoints table with channel field (email, linkedin). Manual logging UI for LinkedIn actions. CSV export format compatible with Linked Helper import. Build unified activity timeline view with React.",
    "owner": null,
    "is_next": true,
    "display_order": 137,
    "created_at": "2025-10-02T20:08:39.511523+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "104",
    "project": "Sales Genie",
    "epic": "crm",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a user, I need multi-rep email account management so that I can run campaigns for multiple SDRs/BDRs",
    "acceptance_criteria": [
      "Add multiple sender email accounts to system",
      "Associate each account with a rep (name, role, signature)",
      "Store SMTP credentials securely (encrypted)",
      "Test email account connectivity",
      "Set sending limits per account (e.g., 200 emails/day)",
      "Rotate between accounts for large campaigns",
      "Track usage per account (sent count, quota remaining)",
      "Account health monitoring (deliverability score, bounce rate)",
      "Disable unhealthy accounts automatically",
      "Rep-specific email templates and signatures"
    ],
    "effort": 8,
    "business_value": 8,
    "dependencies": [
      "098"
    ],
    "technical_notes": "Create sender_accounts table with encrypted credentials (crypto module). Use round-robin or weighted distribution for account selection. Monitor bounce rates per account. Implement account health score algorithm.",
    "owner": null,
    "is_next": true,
    "display_order": 138,
    "created_at": "2025-10-02T20:08:39.511523+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "105",
    "project": "Sales Genie",
    "epic": "crm",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a user, I need per-rep campaign assignment so that prospects are distributed across sales team",
    "acceptance_criteria": [
      "Assign prospects to specific reps",
      "Auto-distribute prospects (round-robin, by territory, by industry)",
      "Rep-specific campaign views (see only my campaigns)",
      "Rep-specific response inbox",
      "Manager view to see all reps' campaigns",
      "Reassign prospects between reps",
      "Track rep performance (emails sent, replies, meetings booked)",
      "Rep quotas and goals",
      "Leaderboard/gamification",
      "Rep availability calendar (don't send when rep is on vacation)"
    ],
    "effort": 8,
    "business_value": 7,
    "dependencies": [
      "104"
    ],
    "technical_notes": "Add assigned_rep_id to prospects and campaigns tables. Implement role-based access control (RBAC). Use PostgreSQL row-level security for data isolation. Create rep_performance materialized view for analytics.",
    "owner": null,
    "is_next": true,
    "display_order": 139,
    "created_at": "2025-10-02T20:08:39.511523+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "106",
    "project": "Sales Genie",
    "epic": "crm",
    "priority": "CRITICAL",
    "status": "NOT_STARTED",
    "user_story": "As a system, I need prospect deduplication so that we don't contact the same person multiple times",
    "acceptance_criteria": [
      "Detect duplicates by: Email, LinkedIn URL, Name + Company",
      "Fuzzy matching for similar names/companies",
      "Show duplicate warnings before import",
      "Merge duplicate records (keep best data from each)",
      "Merge history tracking",
      "Manual duplicate marking/unmarking",
      "Prevent sending campaigns to duplicates",
      "Global suppression list across all imports",
      "Duplicate detection runs on every import automatically",
      "Configure matching sensitivity (strict, moderate, loose)"
    ],
    "effort": 8,
    "business_value": 10,
    "dependencies": [
      "089",
      "102"
    ],
    "technical_notes": "Use fuzzyset.js or string-similarity npm for fuzzy matching. Create deduplication job that runs post-import. Store canonical record ID in duplicates. Use PostgreSQL DISTINCT ON for querying unique records.",
    "owner": null,
    "is_next": true,
    "display_order": 48,
    "created_at": "2025-10-02T20:08:39.511523+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "107",
    "project": "Sales Genie",
    "epic": "crm",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a user, I need data quality scoring so that I can prioritize high-quality prospects",
    "acceptance_criteria": [
      "Quality score 0-100 for each prospect",
      "Score factors: Email verified, Phone present, Company size known, Industry known, Role seniority",
      "Visual indicator (color/badge) for quality tier (High, Medium, Low)",
      "Filter by quality score",
      "Sort by quality score",
      "Flag incomplete records for manual review",
      "Auto-enrich low-quality records suggestion",
      "Quality score updates in real-time as data improves",
      "Bulk quality check on import",
      "Export quality report"
    ],
    "effort": 5,
    "business_value": 8,
    "dependencies": [
      "089",
      "091"
    ],
    "technical_notes": "Create quality_score calculated field. Algorithm: +20 verified email, +15 phone, +20 company size, +15 industry, +30 role seniority. Store as integer 0-100. Index for sorting performance.",
    "owner": null,
    "is_next": true,
    "display_order": 49,
    "created_at": "2025-10-02T20:08:39.511523+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "108",
    "project": "Sales Genie",
    "epic": "infrastructure",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a user, I need email deliverability infrastructure so that emails reach inboxes not spam",
    "acceptance_criteria": [
      "SPF record verification for sender domains",
      "DKIM signing for all outbound emails",
      "DMARC policy enforcement",
      "Email warmup schedule for new domains (gradual volume ramp)",
      "Monitor sender reputation scores",
      "Bounce rate monitoring and alerts (>5% = danger)",
      "Spam complaint rate monitoring (<0.1% target)",
      "Feedback loop integration with ISPs",
      "Blacklist monitoring (check against major blacklists)",
      "Automatic domain rotation if reputation drops"
    ],
    "effort": 8,
    "business_value": 10,
    "dependencies": [
      "098"
    ],
    "technical_notes": "Use DNS lookup to verify SPF/DKIM/DMARC. Implement warmup schedule: Day 1-5: 20/day, Day 6-10: 50/day, Day 11-20: 100/day, Day 21+: 200/day. Monitor via SendGrid/AWS SES reputation APIs. Use MXToolbox API for blacklist checking.",
    "owner": null,
    "is_next": true,
    "display_order": 60,
    "created_at": "2025-10-02T20:08:39.511523+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "109",
    "project": "Sales Genie",
    "epic": "crm",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a user, I need campaign test mode so that I can validate campaigns before production send",
    "acceptance_criteria": [
      "Test mode sends to internal email addresses only",
      "Test with real prospect data (preview personalization)",
      "Send test to multiple team members for review",
      "Test mode clearly labeled in UI",
      "Cannot accidentally send test campaigns to prospects",
      "Test send includes all tracking pixels/links",
      "Validate all personalization variables render correctly",
      "Check for broken links in test emails",
      "Spam score check on test emails",
      "Approval required to move from test to production"
    ],
    "effort": 5,
    "business_value": 9,
    "dependencies": [
      "095",
      "098"
    ],
    "technical_notes": "Add is_test_mode boolean to campaigns table. Override recipient emails in test mode. Use mail-tester.com API for spam score checking. Implement link validation with axios HEAD requests.",
    "owner": null,
    "is_next": true,
    "display_order": 61,
    "created_at": "2025-10-02T20:08:39.511523+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "110",
    "project": "Sales Genie",
    "epic": "crm",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a user, I need campaign pause/stop controls so that I can halt problematic campaigns",
    "acceptance_criteria": [
      "Pause campaign (stops new sends, can resume later)",
      "Stop campaign (permanently halts, cannot resume)",
      "Stop individual prospect in campaign (while others continue)",
      "Emergency stop button (halts all campaigns immediately)",
      "Resume paused campaigns from where they left off",
      "Schedule campaign start time (don't start immediately)",
      "Auto-pause on high bounce rate (>5%)",
      "Auto-pause on high unsubscribe rate (>1%)",
      "Pause notification to campaign owner",
      "Audit log of all pause/stop actions"
    ],
    "effort": 5,
    "business_value": 9,
    "dependencies": [
      "098"
    ],
    "technical_notes": "Add campaign_status field: active, paused, stopped. Check status before each send in queue. Store pause_reason and paused_by. Implement threshold monitoring job that auto-pauses campaigns.",
    "owner": null,
    "is_next": true,
    "display_order": 62,
    "created_at": "2025-10-02T20:08:39.511523+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "111",
    "project": "Sales Genie",
    "epic": "analytics",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a user, I need campaign performance dashboard so that I can measure ROI and optimize campaigns",
    "acceptance_criteria": [
      "Campaign-level metrics: Sent, Delivered, Opened, Clicked, Replied, Bounced, Unsubscribed",
      "Email-level metrics (for each email in sequence)",
      "Conversion funnel visualization",
      "Open rate, click rate, reply rate percentages",
      "Time-series charts (performance over time)",
      "Compare campaigns side-by-side",
      "Best performing subject lines",
      "Best performing send times",
      "Geographic performance breakdown",
      "Export reports to PDF/CSV"
    ],
    "effort": 8,
    "business_value": 9,
    "dependencies": [
      "099",
      "100"
    ],
    "technical_notes": "Create campaign_stats materialized view for performance. Use Chart.js or Recharts for visualizations. Aggregate metrics in background job (hourly). Use PostgreSQL window functions for time-series analysis.",
    "owner": null,
    "is_next": true,
    "display_order": 140,
    "created_at": "2025-10-02T20:08:39.511523+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "112",
    "project": "Sales Genie",
    "epic": "integration",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a user, I need CRM integration so that qualified leads flow into existing sales pipeline",
    "acceptance_criteria": [
      "Export qualified leads to HubSpot CRM",
      "Export qualified leads to Salesforce",
      "Two-way sync of lead status updates",
      "Map Sales Genie fields to CRM fields",
      "Automatic lead creation in CRM on positive reply",
      "Manual export option for selected prospects",
      "Sync frequency configuration (real-time, hourly, daily)",
      "Error handling for failed syncs",
      "Sync history and audit log",
      "Prevent duplicate leads in CRM"
    ],
    "effort": 13,
    "business_value": 8,
    "dependencies": [
      "101"
    ],
    "technical_notes": "Use HubSpot API and Salesforce API. Implement OAuth2 authentication. Store CRM IDs in prospects table for syncing. Use webhooks for real-time updates. Create sync_log table for debugging.",
    "owner": null,
    "is_next": true,
    "display_order": 141,
    "created_at": "2025-10-02T20:08:39.511523+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "113",
    "project": "Sales Genie",
    "epic": "crm",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a user, I need A/B testing capability so that I can optimize email performance",
    "acceptance_criteria": [
      "Create A/B test variants (2-5 variants)",
      "Test variables: Subject line, email body, sender name, send time",
      "Split traffic evenly or custom percentage allocation",
      "Define success metric (open rate, click rate, reply rate)",
      "Statistical significance calculation",
      "Auto-select winner after minimum sample size",
      "Continue campaign with winning variant",
      "Visual comparison of variant performance",
      "Test history and learnings repository",
      "Apply winning insights to future campaigns"
    ],
    "effort": 8,
    "business_value": 7,
    "dependencies": [
      "098",
      "111"
    ],
    "technical_notes": "Create campaign_variants table. Use chi-square test for statistical significance. Minimum 100 sends per variant before declaring winner. Store variant assignment in email_sends table.",
    "owner": null,
    "is_next": true,
    "display_order": 142,
    "created_at": "2025-10-02T20:08:39.511523+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "114",
    "project": "Sales Genie",
    "epic": "crm",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a user, I need email template library so that I can reuse high-performing emails",
    "acceptance_criteria": [
      "Save any email as template",
      "Template categories (introduction, follow-up, value proposition, meeting request, etc.)",
      "Tag templates by industry, role, use case",
      "Search templates by keyword",
      "Preview template with sample data",
      "Template performance metrics (avg open rate, reply rate)",
      "Share templates across team",
      "Template versioning",
      "Clone and customize templates",
      "Import/export templates"
    ],
    "effort": 5,
    "business_value": 7,
    "dependencies": [
      "095"
    ],
    "technical_notes": "Create email_templates table with content, metadata, and performance stats. Use full-text search (PostgreSQL tsvector) for keyword search. Store template variables for personalization.",
    "owner": null,
    "is_next": true,
    "display_order": 143,
    "created_at": "2025-10-02T20:08:39.511523+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "115",
    "project": "Sales Genie",
    "epic": "analytics",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a sales manager, I need team performance analytics so that I can coach reps and optimize strategy",
    "acceptance_criteria": [
      "Rep leaderboard (by replies, meetings booked, pipeline generated)",
      "Rep activity tracking (emails sent, campaigns launched)",
      "Rep response time to hot leads",
      "Rep conversion rates by stage",
      "Team aggregate metrics",
      "Benchmark against team average",
      "Identify coaching opportunities (low performers)",
      "Identify best practices (top performers)",
      "Weekly/monthly performance reports",
      "Export for executive reporting"
    ],
    "effort": 8,
    "business_value": 6,
    "dependencies": [
      "104",
      "105",
      "111"
    ],
    "technical_notes": "Create rep_performance_stats materialized view. Use PostgreSQL RANK() window function for leaderboards. Schedule weekly report generation job. Use Chart.js for performance visualizations.",
    "owner": null,
    "is_next": true,
    "display_order": 144,
    "created_at": "2025-10-02T20:08:39.511523+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "116",
    "project": "BubbleUp",
    "epic": "UI-UX",
    "priority": "MEDIUM",
    "status": "DONE",
    "user_story": "As a user, I need dark mode so that my eyes don't hurt at 5 o'clock in the morning",
    "acceptance_criteria": [
      "Light mode remains as is",
      "Dark mode available"
    ],
    "effort": 5,
    "business_value": 5,
    "dependencies": [],
    "technical_notes": "  Current state:\n  - The dark mode UI controls are present in Settings\n  - The JavaScript logic is in place\n  - However, the dark mode styling won't visually work yet because Tailwind CSS v4 needs proper configuration",
    "owner": null,
    "is_next": false,
    "display_order": 29,
    "created_at": "2025-10-03T04:48:23.800304+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "117",
    "project": "BubbleUp",
    "epic": "Foundation",
    "priority": "MEDIUM",
    "status": "DONE",
    "user_story": "As a user, I need the dependencies tooltips to show the status of the dependency",
    "acceptance_criteria": [
      "e.g.  So if it's done, it needs to say \"status - user story name ... \"DONE - «user story name»\" "
    ],
    "effort": 3,
    "business_value": 5,
    "dependencies": [],
    "technical_notes": "",
    "owner": null,
    "is_next": false,
    "display_order": 28,
    "created_at": "2025-10-03T05:21:01.549826+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "118",
    "project": "BubbleUp",
    "epic": "Foundation",
    "priority": "MEDIUM",
    "status": "CLOSED",
    "user_story": "As a developer, I need to update the status and progress of tasks in bubble-up using an API interface.  Prepare an api end point for adding a new user story and tasks and edit user story and tasks.",
    "acceptance_criteria": [
      "CLOSED BY MW",
      "Replaced by detailed stories 129-133"
    ],
    "effort": 3,
    "business_value": 5,
    "dependencies": [],
    "technical_notes": "",
    "owner": null,
    "is_next": false,
    "display_order": 27,
    "created_at": "2025-10-03T07:33:02.547532+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "119",
    "project": "BubbleUp",
    "epic": "Foundation",
    "priority": "MEDIUM",
    "status": "CLOSED",
    "user_story": "As a system, I need password and user ID authentication so that unauthorised users cannot access the system. ",
    "acceptance_criteria": [
      "CLOSED by MW",
      "Replaced by user stories 120-127"
    ],
    "effort": 3,
    "business_value": 5,
    "dependencies": [],
    "technical_notes": "Basic authentication added for now. More refinements to come with user stories 120-127. ",
    "owner": null,
    "is_next": false,
    "display_order": 24,
    "created_at": "2025-10-03T09:00:06.08553+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "120",
    "project": "BubbleUp",
    "epic": "authorization",
    "priority": "HIGH",
    "status": "DONE",
    "user_story": "As a user with a role, I want permissions to follow my assigned role so that I only access what I should",
    "acceptance_criteria": [
      "Define roles: Admin, Editor, Read/Write, Read Only",
      "Admin: Full access to all projects, users, settings",
      "Editor: Modify project details and backlog items",
      "Read/Write: Create and edit backlog items but not delete projects",
      "Read Only: View only",
      "Role-based checks enforced at both backend API and frontend UI"
    ],
    "effort": 8,
    "business_value": 10,
    "dependencies": [
      "118",
      "119"
    ],
    "technical_notes": "Implement RBAC middleware. Use database-stored roles linked to users. Consider future scalability with permissions matrix.",
    "owner": null,
    "is_next": false,
    "display_order": 25,
    "created_at": "2025-10-03T09:27:21.935963+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "121",
    "project": "BubbleUp",
    "epic": "authorization",
    "priority": "MEDIUM",
    "status": "DONE",
    "user_story": "As an admin, I want to assign user roles per project so that contributors only access their projects",
    "acceptance_criteria": [
      "Admin can invite a user to a project with a specific role",
      "A user can belong to multiple projects with different roles per project",
      "Non-members cannot access a project (API calls blocked)"
    ],
    "effort": 13,
    "business_value": 10,
    "dependencies": [
      "120"
    ],
    "technical_notes": "Define Project-User mapping table (many-to-many relationship). Role checked at project-level, not global-only.",
    "owner": null,
    "is_next": false,
    "display_order": 21,
    "created_at": "2025-10-03T09:27:22.146989+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "122",
    "project": "BubbleUp",
    "epic": "Authentication",
    "priority": "LOW",
    "status": "NOT_STARTED",
    "user_story": "As a user, I want to manage my profile so that I can update my details and password",
    "acceptance_criteria": [
      "User can update name, email, password",
      "Email change requires confirmation link",
      "Password update requires old password"
    ],
    "effort": 5,
    "business_value": 7,
    "dependencies": [
      "118"
    ],
    "technical_notes": "Add profile page in UI. Standard security checks (hashed passwords, token-based email confirmation).",
    "owner": null,
    "is_next": false,
    "display_order": 22,
    "created_at": "2025-10-03T09:27:22.279291+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "123",
    "project": "BubbleUp",
    "epic": "Authentication",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a user, I want to log out and have inactive sessions expire so that my account stays secure",
    "acceptance_criteria": [
      "User can log out",
      "Inactive sessions auto-expire after X hours",
      "Expired session redirects to login"
    ],
    "effort": 3,
    "business_value": 6,
    "dependencies": [
      "118"
    ],
    "technical_notes": "Set short-lived JWTs or rolling session cookies. Refresh token mechanism optional for now.",
    "owner": null,
    "is_next": false,
    "display_order": 20,
    "created_at": "2025-10-03T09:27:22.405142+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "124",
    "project": "BubbleUp",
    "epic": "security",
    "priority": "LOW",
    "status": "NOT_STARTED",
    "user_story": "As an admin, I want audit logs of user activity so that I can monitor security and activity",
    "acceptance_criteria": [
      "Actions such as logins, project modifications, and role changes are logged",
      "Admin can view logs in dashboard"
    ],
    "effort": 8,
    "business_value": 5,
    "dependencies": [
      "119",
      "120"
    ],
    "technical_notes": "Store logs in database or external logging system. Limit log history for performance.",
    "owner": null,
    "is_next": false,
    "display_order": 23,
    "created_at": "2025-10-03T09:27:22.526348+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "125",
    "project": "BubbleUp",
    "epic": "Authentication",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As an admin, I want to invite users via email so that onboarding is seamless",
    "acceptance_criteria": [
      "Admin can send an invite with role and project access",
      "User receives email with link to set password and confirm account",
      "Expired invite links result in error message"
    ],
    "effort": 8,
    "business_value": 8,
    "dependencies": [
      "119"
    ],
    "technical_notes": "Requires email service integration (SendGrid, Postmark, etc.).",
    "owner": null,
    "is_next": false,
    "display_order": 26,
    "created_at": "2025-10-03T09:27:22.643928+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "126",
    "project": "BubbleUp",
    "epic": "Authentication",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a user, I want to register and log in so that I can securely access BubbleUp",
    "acceptance_criteria": [
      "User can create an account with email and password",
      "User can log in using valid credentials",
      "Incorrect login shows an error message without exposing details",
      "Logged-in session persists until logout or timeout"
    ],
    "effort": 8,
    "business_value": 10,
    "dependencies": [],
    "technical_notes": "Use a secure authentication library (e.g., NextAuth.js, Supabase Auth, or Passport.js). Store hashed passwords (bcrypt or Argon2). Session-based or JWT-based authentication.",
    "owner": null,
    "is_next": false,
    "display_order": 13,
    "created_at": "2025-10-03T09:33:22.075931+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "127",
    "project": "BubbleUp",
    "epic": "Authentication",
    "priority": "CRITICAL",
    "status": "NOT_STARTED",
    "user_story": "As an admin, I want to create and manage users so that project permissions can be set centrally",
    "acceptance_criteria": [
      "Admin can add a new user with email, password (temporary or auto-generated), and role",
      "Admin can deactivate or delete a user",
      "Admin can reset user passwords"
    ],
    "effort": 5,
    "business_value": 9,
    "dependencies": [
      "126"
    ],
    "technical_notes": "Provide an Admin Dashboard with user CRUD operations. Use role-based middleware to ensure only admins can access.",
    "owner": null,
    "is_next": false,
    "display_order": 19,
    "created_at": "2025-10-03T09:33:22.306477+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "128",
    "project": "BubbleUp",
    "epic": "API Integration",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a developer, I want to create a user story via an API so that external systems can add backlog items",
    "acceptance_criteria": [
      "API endpoint POST /api/stories exists",
      "Request payload includes: title, description, priority, effort, businessValue, epicName",
      "Response returns created story ID and timestamp",
      "Only authenticated users with Editor/Admin role can create"
    ],
    "effort": 8,
    "business_value": 10,
    "dependencies": [],
    "technical_notes": "JSON request/response. Validate required fields. Role check middleware needed.",
    "owner": null,
    "is_next": false,
    "display_order": 16,
    "created_at": "2025-10-03T09:37:56.797261+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "129",
    "project": "BubbleUp",
    "epic": "API Integration",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a developer, I want to update user stories via API so that external systems can keep backlog items current",
    "acceptance_criteria": [
      "API endpoint PUT /api/stories/:id exists",
      "Request payload allows updating: title, description, effort, businessValue, priority, epicName",
      "Non-existent story returns 404",
      "Only Editor/Admin can update"
    ],
    "effort": 5,
    "business_value": 9,
    "dependencies": [
      "128"
    ],
    "technical_notes": "ID validation required. Audit/log updates for traceability.",
    "owner": null,
    "is_next": false,
    "display_order": 18,
    "created_at": "2025-10-03T09:37:57.472104+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "130",
    "project": "BubbleUp",
    "epic": "API Integration",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a developer, I want to create tasks linked to user stories via API so that backlog detail is programmatically managed",
    "acceptance_criteria": [
      "API endpoint POST /api/stories/:storyId/tasks exists",
      "Request payload includes: title, status (default = \"To Do\"), effort estimate, assignedUserId (optional)",
      "Created task ID and status returned",
      "Validation if story does not exist"
    ],
    "effort": 8,
    "business_value": 10,
    "dependencies": [
      "128"
    ],
    "technical_notes": "Define task schema: {id, title, status, effort, assignedUserId, progress%, timestamps}. Link tasks to stories via foreign key.",
    "owner": null,
    "is_next": false,
    "display_order": 14,
    "created_at": "2025-10-03T09:37:57.5973+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "131",
    "project": "BubbleUp",
    "epic": "API Integration",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a developer, I want to update tasks via API so that backlog tasks can be modified externally",
    "acceptance_criteria": [
      "API endpoint PUT /api/tasks/:id exists",
      "Request payload allows updating: title, effort, assignedUserId, description",
      "Errors if non-existent",
      "Only Editor/Admin can update"
    ],
    "effort": 5,
    "business_value": 9,
    "dependencies": [
      "130"
    ],
    "technical_notes": "Use optimistic concurrency control to avoid conflicts. Extend story-level permissions to tasks.",
    "owner": null,
    "is_next": false,
    "display_order": 15,
    "created_at": "2025-10-03T09:37:57.742981+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "132",
    "project": "BubbleUp",
    "epic": "API Integration",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a developer, I want to update task status and progress via API so that external tools can reflect real-time progress",
    "acceptance_criteria": [
      "API endpoint PATCH /api/tasks/:id/status exists",
      "Request payload includes: status (\"To Do\", \"In Progress\", \"Blocked\", \"Done\"), and progress% (0–100)",
      "Response returns updated values",
      "Validation ensures progress is numeric 0–100",
      "Only project members with Editor or Read/Write role can update"
    ],
    "effort": 8,
    "business_value": 10,
    "dependencies": [
      "130"
    ],
    "technical_notes": "Consider WebSocket or webhook integration for real-time updates later. Progress field stored as integer %.",
    "owner": null,
    "is_next": false,
    "display_order": 12,
    "created_at": "2025-10-03T09:37:57.880458+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "133",
    "project": "BubbleUp",
    "epic": "API Integration",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a developer, I want to authenticate API requests with role-based permissions so that only authorized apps/users can modify backlog content",
    "acceptance_criteria": [
      "API endpoints require user login with user/token auth",
      "Token must match an active session",
      "API returns 401 Unauthorized if no valid authentication",
      "Role permissions apply to create/edit calls"
    ],
    "effort": 8,
    "business_value": 10,
    "dependencies": [
      "120"
    ],
    "technical_notes": "Use JWT or session tokens in headers. Standardize error responses.",
    "owner": null,
    "is_next": false,
    "display_order": 17,
    "created_at": "2025-10-03T09:37:58.258509+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "134",
    "project": "ISO27001",
    "epic": "Foundation",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a sales rep, I need the ISO 27001 demo app to include a FAST Start-up Guide and tooltips so that the app self-demos. ",
    "acceptance_criteria": [],
    "effort": 3,
    "business_value": 5,
    "dependencies": [],
    "technical_notes": "",
    "owner": null,
    "is_next": false,
    "display_order": 11,
    "created_at": "2025-10-03T10:12:17.807272+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "135",
    "project": "AI Governor",
    "epic": "Authentication",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a developer, I need to integration the login process to the regulativ mfa service. incorporate auth token and refresh token.",
    "acceptance_criteria": [],
    "effort": 3,
    "business_value": 5,
    "dependencies": [],
    "technical_notes": "",
    "owner": null,
    "is_next": false,
    "display_order": 10,
    "created_at": "2025-10-03T14:28:16.082781+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "136",
    "project": "Horizon Xceed",
    "epic": "Deployment",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a developer,. I need to create docker build for this project",
    "acceptance_criteria": [],
    "effort": 3,
    "business_value": 5,
    "dependencies": [],
    "technical_notes": "",
    "owner": null,
    "is_next": false,
    "display_order": 9,
    "created_at": "2025-10-03T14:28:56.595617+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "137",
    "project": "BubbleUp",
    "epic": "Foundation",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a user, I want to be able to assign a user story to a team mate/developer to progress to completion.",
    "acceptance_criteria": [],
    "effort": 3,
    "business_value": 5,
    "dependencies": [],
    "technical_notes": "",
    "owner": null,
    "is_next": false,
    "display_order": 8,
    "created_at": "2025-10-03T14:32:15.865546+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "138",
    "project": "Sales Genie",
    "epic": "Messaging",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a user, I need a personalised video generator so that I can send a personalised video message to every prospect. ",
    "acceptance_criteria": [
      "Implement personalised video generator "
    ],
    "effort": 13,
    "business_value": 10,
    "dependencies": [],
    "technical_notes": "Their pipeline is Sales Navigator -> Apollo -> next they do is interesting. \nThey use Tavus which is Human AI and for each client they generate customised personalised video per lead based on AI research and pitch generated by LLMs https://www.tavus.io/ -> from here into Lemlist -> book demos -> n8n integration into CRM. Have a look at Tavus. He says they are getting more traction because of personalised video.",
    "owner": null,
    "is_next": false,
    "display_order": 7,
    "created_at": "2025-10-04T10:11:50.823374+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "139",
    "project": "GTM Spike",
    "epic": "Foundation",
    "priority": "LOW",
    "status": "IN_PROGRESS",
    "user_story": "test story - edited",
    "acceptance_criteria": [],
    "effort": 3,
    "business_value": 5,
    "dependencies": [],
    "technical_notes": "",
    "owner": null,
    "is_next": false,
    "display_order": 6,
    "created_at": "2025-10-04T12:58:44.260399+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "140",
    "project": "Sales Genie",
    "epic": "Messaging",
    "priority": "MEDIUM",
    "status": "IN_PROGRESS",
    "user_story": "As a user, I need to see LinkedIn messages for every prospect so that I can monitor responses from prospects and then go to LinkedIn to respond to that message. ",
    "acceptance_criteria": [
      "LinkedIn and LinkedIn Sales Navigator messages available, up-to-date for every prospect",
      "Messages displayed in chronological conversation thread view (newest first or oldest first toggle)",
      "Visual distinction between sent vs received messages (different styling/alignment)",
      "Message metadata shown: timestamp, direction (sent/received), platform (LinkedIn/Sales Nav)",
      "Empty state message when no LinkedIn messages exist for a prospect",
      "Click-to-expand message details (full message text if truncated in list view)",
      "Messages accessible from Prospects page (click prospect row to open detail modal/panel)",
      "Direct link to LinkedIn conversation from message thread (opens LinkedIn in new tab)",
      "Message count badge on prospect cards showing unread/total messages",
      "Filter prospects by 'has messages' or 'has recent replies'",
      "Real-time updates via LinkedHelper webhook when new messages arrive",
      "Manual refresh button to sync latest messages",
      "Last sync timestamp displayed ('Last updated: 2 minutes ago')",
      "Visual indicator for new/unread messages since last view",
      "Lazy loading for prospects with 50+ messages",
      "Pagination or infinite scroll for long conversation threads",
      "Search within message history for a prospect"
    ],
    "effort": 3,
    "business_value": 5,
    "dependencies": [],
    "technical_notes": "CURRENT IMPLEMENTATION:\r\n  ✅ Database: linkedin_messages table with prospect_id FK, direction, message_text, message_date\r\n  ✅ Webhook: LinkedHelper webhook endpoint at /api/webhooks/linkedhelper/message\r\n  ✅ Import: CSV import populates messages from LinkedHelper exports\r\n\r\n  API ENDPOINTS NEEDED:\r\n  GET /api/prospects/:id/messages - Retrieve all messages for a prospect\r\n  GET /api/prospects/:id/messages/unread - Count unread messages\r\n  PUT /api/prospects/:id/messages/:messageId/read - Mark message as read\r\n  POST /api/prospects/:id/messages/sync - Manual sync trigger for LinkedHelper\r\n\r\n  FRONTEND COMPONENTS:\r\n  - MessageThread component (conversation UI with bubbles)\r\n  - MessageList component (table/list view alternative)\r\n  - MessageBadge component (unread count indicator)\r\n  - MessageFilters component (filter by date, direction, keyword)\r\n\r\n  REAL-TIME UPDATES:\r\n  - WebSocket event: linkedin_message_received when webhook triggers\r\n  - Dashboard subscribes to WebSocket for live message notifications\r\n  - Toast notification when new message arrives for currently viewed prospect\r\n\r\n  INTEGRATION POINTS:\r\n  - LinkedHelper webhook (implemented - auto-imports messages)\r\n  - LinkedIn deep links: https://www.linkedin.com/messaging/thread/{threadId}/\r\n  - Sales Navigator deep links: https://www.linkedin.com/sales/inbox/{conversationId}\r\n\r\n  DATA MODEL ENHANCEMENTS:\r\n  - Add is_read boolean to linkedin_messages table\r\n  - Add thread_id for grouping related messages\r\n  - Add linkedin_url to messages for direct navigation\r\n  - Index on (prospect_id, message_date DESC) for fast queries\r\n\r\n  SECURITY:\r\n  - Validate user has permission to view prospect's messages\r\n  - Sanitize message text to prevent XSS attacks\r\n  - Rate limit LinkedIn deep link generations\r\n\r\n  TESTING:\r\n  - Unit tests for message API endpoints\r\n  - Integration test for webhook → database → UI flow\r\n  - E2E test: click prospect → view messages → open LinkedIn\r\n  - Load test with 1000+ messages per prospect",
    "owner": null,
    "is_next": false,
    "display_order": 5,
    "created_at": "2025-10-04T13:09:17.896334+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "141",
    "project": "Sales Genie",
    "epic": "Foundation",
    "priority": "LOW",
    "status": "IN_PROGRESS",
    "user_story": " test story ",
    "acceptance_criteria": [],
    "effort": 3,
    "business_value": 5,
    "dependencies": [],
    "technical_notes": "",
    "owner": null,
    "is_next": false,
    "display_order": 4,
    "created_at": "2025-10-04T13:18:51.269864+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "142",
    "project": "SOC",
    "epic": "Foundation",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "TEST STORY TO BE REPLACED",
    "acceptance_criteria": [
      "Dashboard displays real-time security event streams",
      "Integration with SIEM tools (Splunk, QRadar, Sentinel)",
      "Automated threat detection and alerting",
      "Incident response workflow management",
      "Security metrics and KPI reporting",
      "User access control with role-based permissions",
      "Audit logging for all security operations",
      "Integration with threat intelligence feeds"
    ],
    "effort": 13,
    "business_value": 10,
    "dependencies": [],
    "technical_notes": "TECHNICAL ARCHITECTURE:\n\n- Backend: Node.js with Express API\n- Database: PostgreSQL for incident storage\n- Real-time: WebSocket for live event streaming\n- SIEM Integration: REST APIs and Syslog forwarding\n- Frontend: React with real-time dashboard\n- Message Queue: Redis for event processing\n- Analytics: Elasticsearch for log analysis\n\nSECURITY REQUIREMENTS:\n- Multi-factor authentication mandatory\n- Encrypted data at rest and in transit\n- SOC 2 Type II compliance ready\n- ISO 27001 aligned controls\n- RBAC with least privilege principle\n- Complete audit trail for forensics\n\nINTEGRATION POINTS:\n- SIEM: Splunk, IBM QRadar, Azure Sentinel\n- EDR: CrowdStrike, SentinelOne, Carbon Black\n- Threat Intel: MISP, ThreatConnect, Recorded Future\n- Ticketing: Jira, ServiceNow\n- Communication: Slack, MS Teams for alerts",
    "owner": "",
    "is_next": false,
    "display_order": 3,
    "created_at": "2025-10-04T17:27:06.7325+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": "88c48796-c1a2-471d-808d-8f72f38d8359"
  },
  {
    "id": "143",
    "project": "Cyber Essentials",
    "epic": "Foundation",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "As a security manager, I want to establish the Cyber Essentials certification framework, so that we can demonstrate our commitment to cybersecurity best practices and meet customer requirements.",
    "acceptance_criteria": [
      "Cyber Essentials project is created in BubbleUp",
      "Project baseline documentation is established",
      "Initial gap analysis is completed",
      "Certification roadmap is defined"
    ],
    "effort": 3,
    "business_value": 7,
    "dependencies": [],
    "technical_notes": "Placeholder story for Cyber Essentials project initialization. This establishes the project in the system and provides a foundation for future certification work.",
    "owner": "",
    "is_next": false,
    "display_order": 2,
    "created_at": "2025-10-04T17:35:34.517209+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "144",
    "project": "AI Governor",
    "epic": "Foundation",
    "priority": "MEDIUM",
    "status": "NOT_STARTED",
    "user_story": "as a developer, i want all the backlog items for this project inserted and managed from bubbleup",
    "acceptance_criteria": [],
    "effort": 3,
    "business_value": 5,
    "dependencies": [],
    "technical_notes": "",
    "owner": "",
    "is_next": false,
    "display_order": 1,
    "created_at": "2025-10-05T13:01:34.242408+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  },
  {
    "id": "145",
    "project": "GDPR",
    "epic": "Marketing",
    "priority": "HIGH",
    "status": "NOT_STARTED",
    "user_story": "As a marketer, I need a GDPR marketing micro-site so that prospects can understand the proposition, demo the app, and make a call to action (buying decision or demo decision). ",
    "acceptance_criteria": [],
    "effort": 3,
    "business_value": 5,
    "dependencies": [],
    "technical_notes": "",
    "owner": "",
    "is_next": false,
    "display_order": 0,
    "created_at": "2025-10-05T14:47:05.525567+00:00",
    "updated_at": "2025-10-05T15:34:34.922137+00:00",
    "created_by": null,
    "assigned_to": null
  }
]